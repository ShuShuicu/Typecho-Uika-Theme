/* 
    Typecho Theme Development Framework
    TTDF · 一个面向小白简单易懂的Typecho主题模板开发框架
    @Author 鼠子Tomoriゞ
    https://github.com/ShuShuicu/Typecho-Theme-Development-Framework
*/

document.addEventListener('DOMContentLoaded', function () {
    mdui.mutation();
    // NProgress 配置项
    const nprogressConfig = {
        minimum: 0.1,
        easing: 'ease',
        speed: 800,
        showSpinner: true,
        trickle: true,
        trickleSpeed: 200
    };

    NProgress.configure(nprogressConfig);
    NProgress.start();

    // 页面加载完成后结束进度条
    window.addEventListener('load', function () {
        NProgress.done();
    });
});

// 切换主题
function switchTheme() {
    const body = document.body;
    const currentTheme = body.getAttribute('arco-theme') || 'light';
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';

    // 切换 arco-theme 属性
    body.setAttribute('arco-theme', newTheme);

    // 切换 mdui-theme-layout 类
    body.classList.remove(`mdui-theme-layout-${currentTheme}`);
    body.classList.add(`mdui-theme-layout-${newTheme}`);

    // 保存主题状态到 localStorage
    localStorage.setItem('theme', newTheme);

    // 使用 ArcoVue 的全局提示
    if (typeof ArcoVue !== 'undefined') {
        const message = ArcoVue.Message;
        message.success(`已切换至 ${newTheme === 'light' ? '亮色' : '暗色'} 主题`);
    }
}

// 页面加载时应用保存的主题
document.addEventListener('DOMContentLoaded', () => {
    const savedTheme = localStorage.getItem('theme') || 'light';
    document.body.setAttribute('arco-theme', savedTheme);
    document.body.classList.add(`mdui-theme-layout-${savedTheme}`);
});

/**
 * Uika对话框
 */
const Uika_dialogSystem = {
    scrollPosition: 0,

    init: function() {
        // 使用事件委托处理所有按钮
        document.addEventListener('click', (e) => {
            // 处理打开按钮
            const controlBtn = e.target.closest('.Uika-dialog-control-btn');
            if (controlBtn) {
                const dialogId = controlBtn.getAttribute('data-dialog');
                this.Uika_openDialog(dialogId);
                return;
            }

            // 处理关闭按钮
            const closeBtn = e.target.closest('.Uika-dialog-close');
            if (closeBtn) {
                const dialog = closeBtn.closest('.Uika-dialog-overlay');
                this.Uika_closeDialog(dialog);
                return;
            }

            // 处理取消按钮
            const cancelBtn = e.target.closest('.Uika-dialog-button-secondary');
            if (cancelBtn) {
                const dialog = cancelBtn.closest('.Uika-dialog-overlay');
                this.Uika_closeDialog(dialog);
                return;
            }

            // 处理遮罩层点击
            const overlay = e.target.closest('.Uika-dialog-overlay');
            if (overlay && e.target === overlay) {
                this.Uika_closeDialog(overlay);
            }
        });

        // ESC键关闭
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                const activeDialog = document.querySelector('.Uika-dialog-overlay.active');
                if (activeDialog) {
                    this.Uika_closeDialog(activeDialog);
                }
            }
        });
    },

    Uika_lockScroll: function() {
        this.scrollPosition = window.pageYOffset;
        document.body.classList.add('dialog-open');
        document.body.style.top = `-${this.scrollPosition}px`;
    },

    Uika_unlockScroll: function() {
        document.body.classList.remove('dialog-open');
        document.body.style.top = '';
        window.scrollTo(0, this.scrollPosition);
    },

    Uika_openDialog: function(dialogId) {
        document.querySelectorAll('.Uika-dialog-overlay.active').forEach(dialog => {
            this.Uika_closeDialog(dialog);
        });

        const dialog = document.getElementById(dialogId);
        if (dialog) {
            this.Uika_lockScroll();
            dialog.classList.add('active');
        }
    },

    Uika_closeDialog: function(dialog) {
        if (!dialog) return;
        dialog.classList.remove('active');
        
        // 添加关闭动画结束后才解锁滚动
        const handleTransitionEnd = () => {
            dialog.removeEventListener('transitionend', handleTransitionEnd);
            if (!document.querySelector('.Uika-dialog-overlay.active')) {
                this.Uika_unlockScroll();
            }
        };
        
        dialog.addEventListener('transitionend', handleTransitionEnd);
    }
};

// 初始化
document.addEventListener('DOMContentLoaded', () => {
    Uika_dialogSystem.init();
});

document.addEventListener('DOMContentLoaded', function () {
    // 获取文章内容区域
    const postContent = document.getElementById('PostContent');
    
    // 只有当元素存在时才初始化viewer.js
    if (postContent) {
        // 初始化viewer.js
        var gallery = new Viewer(postContent, {
            toolbar: {
                zoomIn: 1,
                zoomOut: 1,
                oneToOne: 1,
                reset: 1,
                prev: 1,
                play: 0, // 关闭自动播放
                next: 1,
                rotateLeft: 1,
                rotateRight: 1,
                flipHorizontal: 1,
                flipVertical: 1,
            },
            title: true, // 标题显示
        });
    }
});

/* PrismJS 1.17.1
https://prismjs.com/download.html#themes=prism-tomorrow&languages=markup+css+clike+javascript+apacheconf+aspnet+bash+c+csharp+cpp+coffeescript+git+go+java+javadoc+javadoclike+json+less+lua+markdown+markup-templating+nginx+php+python+ruby+smarty+sql&plugins=line-numbers+show-language+normalize-whitespace+toolbar+copy-to-clipboard+download-button+match-braces */
var _self = "undefined" != typeof window ? window : "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope ? self : {}, Prism = function (u) { var c = /\blang(?:uage)?-([\w-]+)\b/i, n = 0, C = { manual: u.Prism && u.Prism.manual, disableWorkerMessageHandler: u.Prism && u.Prism.disableWorkerMessageHandler, util: { encode: function (e) { return e instanceof _ ? new _(e.type, C.util.encode(e.content), e.alias) : Array.isArray(e) ? e.map(C.util.encode) : e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ") }, type: function (e) { return Object.prototype.toString.call(e).slice(8, -1) }, objId: function (e) { return e.__id || Object.defineProperty(e, "__id", { value: ++n }), e.__id }, clone: function r(e, t) { var a, n, i = C.util.type(e); switch (t = t || {}, i) { case "Object": if (n = C.util.objId(e), t[n]) return t[n]; for (var o in a = {}, t[n] = a, e) e.hasOwnProperty(o) && (a[o] = r(e[o], t)); return a; case "Array": return n = C.util.objId(e), t[n] ? t[n] : (a = [], t[n] = a, e.forEach(function (e, n) { a[n] = r(e, t) }), a); default: return e } }, getLanguage: function (e) { for (; e && !c.test(e.className);)e = e.parentElement; return e ? (e.className.match(c) || [, "none"])[1].toLowerCase() : "none" }, currentScript: function () { if ("undefined" == typeof document) return null; if ("currentScript" in document) return document.currentScript; try { throw new Error } catch (e) { var n = (/at [^(\r\n]*\((.*):.+:.+\)$/i.exec(e.stack) || [])[1]; if (n) { var r = document.getElementsByTagName("script"); for (var t in r) if (r[t].src == n) return r[t] } return null } } }, languages: { extend: function (e, n) { var r = C.util.clone(C.languages[e]); for (var t in n) r[t] = n[t]; return r }, insertBefore: function (r, e, n, t) { var a = (t = t || C.languages)[r], i = {}; for (var o in a) if (a.hasOwnProperty(o)) { if (o == e) for (var l in n) n.hasOwnProperty(l) && (i[l] = n[l]); n.hasOwnProperty(o) || (i[o] = a[o]) } var s = t[r]; return t[r] = i, C.languages.DFS(C.languages, function (e, n) { n === s && e != r && (this[e] = i) }), i }, DFS: function e(n, r, t, a) { a = a || {}; var i = C.util.objId; for (var o in n) if (n.hasOwnProperty(o)) { r.call(n, o, n[o], t || o); var l = n[o], s = C.util.type(l); "Object" !== s || a[i(l)] ? "Array" !== s || a[i(l)] || (a[i(l)] = !0, e(l, r, o, a)) : (a[i(l)] = !0, e(l, r, null, a)) } } }, plugins: {}, highlightAll: function (e, n) { C.highlightAllUnder(document, e, n) }, highlightAllUnder: function (e, n, r) { var t = { callback: r, container: e, selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code' }; C.hooks.run("before-highlightall", t), t.elements = Array.prototype.slice.apply(t.container.querySelectorAll(t.selector)), C.hooks.run("before-all-elements-highlight", t); for (var a, i = 0; a = t.elements[i++];)C.highlightElement(a, !0 === n, t.callback) }, highlightElement: function (e, n, r) { var t = C.util.getLanguage(e), a = C.languages[t]; e.className = e.className.replace(c, "").replace(/\s+/g, " ") + " language-" + t; var i = e.parentNode; i && "pre" === i.nodeName.toLowerCase() && (i.className = i.className.replace(c, "").replace(/\s+/g, " ") + " language-" + t); var o = { element: e, language: t, grammar: a, code: e.textContent }; function l(e) { o.highlightedCode = e, C.hooks.run("before-insert", o), o.element.innerHTML = o.highlightedCode, C.hooks.run("after-highlight", o), C.hooks.run("complete", o), r && r.call(o.element) } if (C.hooks.run("before-sanity-check", o), !o.code) return C.hooks.run("complete", o), void (r && r.call(o.element)); if (C.hooks.run("before-highlight", o), o.grammar) if (n && u.Worker) { var s = new Worker(C.filename); s.onmessage = function (e) { l(e.data) }, s.postMessage(JSON.stringify({ language: o.language, code: o.code, immediateClose: !0 })) } else l(C.highlight(o.code, o.grammar, o.language)); else l(C.util.encode(o.code)) }, highlight: function (e, n, r) { var t = { code: e, grammar: n, language: r }; return C.hooks.run("before-tokenize", t), t.tokens = C.tokenize(t.code, t.grammar), C.hooks.run("after-tokenize", t), _.stringify(C.util.encode(t.tokens), t.language) }, matchGrammar: function (e, n, r, t, a, i, o) { for (var l in r) if (r.hasOwnProperty(l) && r[l]) { var s = r[l]; s = Array.isArray(s) ? s : [s]; for (var u = 0; u < s.length; ++u) { if (o && o == l + "," + u) return; var c = s[u], g = c.inside, f = !!c.lookbehind, h = !!c.greedy, d = 0, m = c.alias; if (h && !c.pattern.global) { var p = c.pattern.toString().match(/[imsuy]*$/)[0]; c.pattern = RegExp(c.pattern.source, p + "g") } c = c.pattern || c; for (var y = t, v = a; y < n.length; v += n[y].length, ++y) { var k = n[y]; if (n.length > e.length) return; if (!(k instanceof _)) { if (h && y != n.length - 1) { if (c.lastIndex = v, !(O = c.exec(e))) break; for (var b = O.index + (f && O[1] ? O[1].length : 0), w = O.index + O[0].length, A = y, P = v, x = n.length; A < x && (P < w || !n[A].type && !n[A - 1].greedy); ++A)(P += n[A].length) <= b && (++y, v = P); if (n[y] instanceof _) continue; S = A - y, k = e.slice(v, P), O.index -= v } else { c.lastIndex = 0; var O = c.exec(k), S = 1 } if (O) { f && (d = O[1] ? O[1].length : 0); w = (b = O.index + d) + (O = O[0].slice(d)).length; var j = k.slice(0, b), N = k.slice(w), E = [y, S]; j && (++y, v += j.length, E.push(j)); var L = new _(l, g ? C.tokenize(O, g) : O, m, O, h); if (E.push(L), N && E.push(N), Array.prototype.splice.apply(n, E), 1 != S && C.matchGrammar(e, n, r, y, v, !0, l + "," + u), i) break } else if (i) break } } } } }, tokenize: function (e, n) { var r = [e], t = n.rest; if (t) { for (var a in t) n[a] = t[a]; delete n.rest } return C.matchGrammar(e, r, n, 0, 0, !1), r }, hooks: { all: {}, add: function (e, n) { var r = C.hooks.all; r[e] = r[e] || [], r[e].push(n) }, run: function (e, n) { var r = C.hooks.all[e]; if (r && r.length) for (var t, a = 0; t = r[a++];)t(n) } }, Token: _ }; function _(e, n, r, t, a) { this.type = e, this.content = n, this.alias = r, this.length = 0 | (t || "").length, this.greedy = !!a } if (u.Prism = C, _.stringify = function (e, n) { if ("string" == typeof e) return e; if (Array.isArray(e)) return e.map(function (e) { return _.stringify(e, n) }).join(""); var r = { type: e.type, content: _.stringify(e.content, n), tag: "span", classes: ["token", e.type], attributes: {}, language: n }; if (e.alias) { var t = Array.isArray(e.alias) ? e.alias : [e.alias]; Array.prototype.push.apply(r.classes, t) } C.hooks.run("wrap", r); var a = Object.keys(r.attributes).map(function (e) { return e + '="' + (r.attributes[e] || "").replace(/"/g, "&quot;") + '"' }).join(" "); return "<" + r.tag + ' class="' + r.classes.join(" ") + '"' + (a ? " " + a : "") + ">" + r.content + "</" + r.tag + ">" }, !u.document) return u.addEventListener && (C.disableWorkerMessageHandler || u.addEventListener("message", function (e) { var n = JSON.parse(e.data), r = n.language, t = n.code, a = n.immediateClose; u.postMessage(C.highlight(t, C.languages[r], r)), a && u.close() }, !1)), C; var e = C.util.currentScript(); if (e && (C.filename = e.src, e.hasAttribute("data-manual") && (C.manual = !0)), !C.manual) { function r() { C.manual || C.highlightAll() } var t = document.readyState; "loading" === t || "interactive" === t && e && e.defer ? document.addEventListener("DOMContentLoaded", r) : window.requestAnimationFrame ? window.requestAnimationFrame(r) : window.setTimeout(r, 16) } return C }(_self); "undefined" != typeof module && module.exports && (module.exports = Prism), "undefined" != typeof global && (global.Prism = Prism);
Prism.languages.markup = { comment: /<!--[\s\S]*?-->/, prolog: /<\?[\s\S]+?\?>/, doctype: { pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:(?!<!--)[^"'\]]|"[^"]*"|'[^']*'|<!--[\s\S]*?-->)*\]\s*)?>/i, greedy: !0 }, cdata: /<!\[CDATA\[[\s\S]*?]]>/i, tag: { pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/i, greedy: !0, inside: { tag: { pattern: /^<\/?[^\s>\/]+/i, inside: { punctuation: /^<\/?/, namespace: /^[^\s>\/:]+:/ } }, "attr-value": { pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/i, inside: { punctuation: [/^=/, { pattern: /^(\s*)["']|["']$/, lookbehind: !0 }] } }, punctuation: /\/?>/, "attr-name": { pattern: /[^\s>\/]+/, inside: { namespace: /^[^\s>\/:]+:/ } } } }, entity: /&#?[\da-z]{1,8};/i }, Prism.languages.markup.tag.inside["attr-value"].inside.entity = Prism.languages.markup.entity, Prism.hooks.add("wrap", function (a) { "entity" === a.type && (a.attributes.title = a.content.replace(/&amp;/, "&")) }), Object.defineProperty(Prism.languages.markup.tag, "addInlined", { value: function (a, e) { var s = {}; s["language-" + e] = { pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i, lookbehind: !0, inside: Prism.languages[e] }, s.cdata = /^<!\[CDATA\[|\]\]>$/i; var n = { "included-cdata": { pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i, inside: s } }; n["language-" + e] = { pattern: /[\s\S]+/, inside: Prism.languages[e] }; var t = {}; t[a] = { pattern: RegExp("(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)".replace(/__/g, a), "i"), lookbehind: !0, greedy: !0, inside: n }, Prism.languages.insertBefore("markup", "cdata", t) } }), Prism.languages.xml = Prism.languages.extend("markup", {}), Prism.languages.html = Prism.languages.markup, Prism.languages.mathml = Prism.languages.markup, Prism.languages.svg = Prism.languages.markup;
!function (s) { var t = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/; s.languages.css = { comment: /\/\*[\s\S]*?\*\//, atrule: { pattern: /@[\w-]+[\s\S]*?(?:;|(?=\s*\{))/, inside: { rule: /@[\w-]+/ } }, url: { pattern: RegExp("url\\((?:" + t.source + "|[^\n\r()]*)\\)", "i"), inside: { function: /^url/i, punctuation: /^\(|\)$/ } }, selector: RegExp("[^{}\\s](?:[^{};\"']|" + t.source + ")*?(?=\\s*\\{)"), string: { pattern: t, greedy: !0 }, property: /[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i, important: /!important\b/i, function: /[-a-z0-9]+(?=\()/i, punctuation: /[(){};:,]/ }, s.languages.css.atrule.inside.rest = s.languages.css; var e = s.languages.markup; e && (e.tag.addInlined("style", "css"), s.languages.insertBefore("inside", "attr-value", { "style-attr": { pattern: /\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i, inside: { "attr-name": { pattern: /^\s*style/i, inside: e.tag.inside }, punctuation: /^\s*=\s*['"]|['"]\s*$/, "attr-value": { pattern: /.+/i, inside: s.languages.css } }, alias: "language-css" } }, e.tag)) }(Prism);
Prism.languages.clike = { comment: [{ pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/, lookbehind: !0 }, { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0, greedy: !0 }], string: { pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0 }, "class-name": { pattern: /(\b(?:class|interface|extends|implements|trait|instanceof|new)\s+|\bcatch\s+\()[\w.\\]+/i, lookbehind: !0, inside: { punctuation: /[.\\]/ } }, keyword: /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/, boolean: /\b(?:true|false)\b/, function: /\w+(?=\()/, number: /\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i, operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/, punctuation: /[{}[\];(),.:]/ };
Prism.languages.javascript = Prism.languages.extend("clike", { "class-name": [Prism.languages.clike["class-name"], { pattern: /(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/, lookbehind: !0 }], keyword: [{ pattern: /((?:^|})\s*)(?:catch|finally)\b/, lookbehind: !0 }, { pattern: /(^|[^.])\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/, lookbehind: !0 }], number: /\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/, function: /#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/, operator: /--|\+\+|\*\*=?|=>|&&|\|\||[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?[.?]?|[~:]/ }), Prism.languages.javascript["class-name"][0].pattern = /(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/, Prism.languages.insertBefore("javascript", "keyword", { regex: { pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=\s*(?:$|[\r\n,.;})\]]))/, lookbehind: !0, greedy: !0 }, "function-variable": { pattern: /#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/, alias: "function" }, parameter: [{ pattern: /(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/, lookbehind: !0, inside: Prism.languages.javascript }, { pattern: /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i, inside: Prism.languages.javascript }, { pattern: /(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/, lookbehind: !0, inside: Prism.languages.javascript }, { pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/, lookbehind: !0, inside: Prism.languages.javascript }], constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/ }), Prism.languages.insertBefore("javascript", "string", { "template-string": { pattern: /`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/, greedy: !0, inside: { "template-punctuation": { pattern: /^`|`$/, alias: "string" }, interpolation: { pattern: /((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/, lookbehind: !0, inside: { "interpolation-punctuation": { pattern: /^\${|}$/, alias: "punctuation" }, rest: Prism.languages.javascript } }, string: /[\s\S]+/ } } }), Prism.languages.markup && Prism.languages.markup.tag.addInlined("script", "javascript"), Prism.languages.js = Prism.languages.javascript;
Prism.languages.apacheconf = { comment: /#.*/, "directive-inline": { pattern: /(^\s*)\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|Type|UserFile|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferSize|BufferedLogs|CGIDScriptTimeout|CGIMapExtension|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DTracePrivileges|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtFilterDefine|ExtFilterOptions|ExtendedStatus|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|KeepAlive|KeepAliveTimeout|KeptBodySize|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|LanguagePriority|Limit(?:InternalRecursion|Request(?:Body|FieldSize|Fields|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|MMapFile|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|ModMimeUsePathInfo|ModemStandard|MultiviewsMatch|Mutex|NWSSLTrustedCerts|NWSSLUpgradeable|NameVirtualHost|NoProxy|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|RLimitCPU|RLimitMEM|RLimitNPROC|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|SSIETag|SSIEndTag|SSIErrorMsg|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|SRPUnknownUserSeed|SRPVerifierFile|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UseStapling|UserName|VerifyClient|VerifyDepth)|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadStackSize|ThreadsPerChild|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\b/im, lookbehind: !0, alias: "property" }, "directive-block": { pattern: /<\/?\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\b *.*>/i, inside: { "directive-block": { pattern: /^<\/?\w+/, inside: { punctuation: /^<\/?/ }, alias: "tag" }, "directive-block-parameter": { pattern: /.*[^>]/, inside: { punctuation: /:/, string: { pattern: /("|').*\1/, inside: { variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/ } } }, alias: "attr-value" }, punctuation: />/ }, alias: "tag" }, "directive-flags": { pattern: /\[(?:\w,?)+\]/, alias: "keyword" }, string: { pattern: /("|').*\1/, inside: { variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/ } }, variable: /[$%]\{?(?:\w\.?[-+:]?)+\}?/, regex: /\^?.*\$|\^.*\$?/ };
Prism.languages.csharp = Prism.languages.extend("clike", { keyword: /\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\b/, string: [{ pattern: /@("|')(?:\1\1|\\[\s\S]|(?!\1)[^\\])*\1/, greedy: !0 }, { pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*?\1/, greedy: !0 }], "class-name": [{ pattern: /\b[A-Z]\w*(?:\.\w+)*\b(?=\s+\w+)/, inside: { punctuation: /\./ } }, { pattern: /(\[)[A-Z]\w*(?:\.\w+)*\b/, lookbehind: !0, inside: { punctuation: /\./ } }, { pattern: /(\b(?:class|interface)\s+[A-Z]\w*(?:\.\w+)*\s*:\s*)[A-Z]\w*(?:\.\w+)*\b/, lookbehind: !0, inside: { punctuation: /\./ } }, { pattern: /((?:\b(?:class|interface|new)\s+)|(?:catch\s+\())[A-Z]\w*(?:\.\w+)*\b/, lookbehind: !0, inside: { punctuation: /\./ } }], number: /\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)f?/i, operator: />>=?|<<=?|[-=]>|([-+&|?])\1|~|[-+*/%&|^!=<>]=?/, punctuation: /\?\.?|::|[{}[\];(),.:]/ }), Prism.languages.insertBefore("csharp", "class-name", { "generic-method": { pattern: /\w+\s*<[^>\r\n]+?>\s*(?=\()/, inside: { function: /^\w+/, "class-name": { pattern: /\b[A-Z]\w*(?:\.\w+)*\b/, inside: { punctuation: /\./ } }, keyword: Prism.languages.csharp.keyword, punctuation: /[<>(),.:]/ } }, preprocessor: { pattern: /(^\s*)#.*/m, lookbehind: !0, alias: "property", inside: { directive: { pattern: /(\s*#)\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\b/, lookbehind: !0, alias: "keyword" } } } }), Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp;
Prism.languages.aspnet = Prism.languages.extend("markup", { "page-directive": { pattern: /<%\s*@.*%>/i, alias: "tag", inside: { "page-directive": { pattern: /<%\s*@\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i, alias: "tag" }, rest: Prism.languages.markup.tag.inside } }, directive: { pattern: /<%.*%>/i, alias: "tag", inside: { directive: { pattern: /<%\s*?[$=%#:]{0,2}|%>/i, alias: "tag" }, rest: Prism.languages.csharp } } }), Prism.languages.aspnet.tag.pattern = /<(?!%)\/?[^\s>\/]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i, Prism.languages.insertBefore("inside", "punctuation", { directive: Prism.languages.aspnet.directive }, Prism.languages.aspnet.tag.inside["attr-value"]), Prism.languages.insertBefore("aspnet", "comment", { "asp-comment": { pattern: /<%--[\s\S]*?--%>/, alias: ["asp", "comment"] } }), Prism.languages.insertBefore("aspnet", Prism.languages.javascript ? "script" : "tag", { "asp-script": { pattern: /(<script(?=.*runat=['"]?server['"]?)[\s\S]*?>)[\s\S]*?(?=<\/script>)/i, lookbehind: !0, alias: ["asp", "script"], inside: Prism.languages.csharp || {} } });
!function (e) { var t = "\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b", n = { environment: { pattern: RegExp("\\$" + t), alias: "constant" }, variable: [{ pattern: /\$?\(\([\s\S]+?\)\)/, greedy: !0, inside: { variable: [{ pattern: /(^\$\(\([\s\S]+)\)\)/, lookbehind: !0 }, /^\$\(\(/], number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee]-?\d+)?/, operator: /--?|-=|\+\+?|\+=|!=?|~|\*\*?|\*=|\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\^=?|\|\|?|\|=|\?|:/, punctuation: /\(\(?|\)\)?|,|;/ } }, { pattern: /\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/, greedy: !0, inside: { variable: /^\$\(|^`|\)$|`$/ } }, { pattern: /\$\{[^}]+\}/, greedy: !0, inside: { operator: /:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/, punctuation: /[\[\]]/, environment: { pattern: RegExp("(\\{)" + t), lookbehind: !0, alias: "constant" } } }, /\$(?:\w+|[#?*!@$])/], entity: /\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/ }; e.languages.bash = { shebang: { pattern: /^#!\s*\/.*/, alias: "important" }, comment: { pattern: /(^|[^"{\\$])#.*/, lookbehind: !0 }, "function-name": [{ pattern: /(\bfunction\s+)\w+(?=(?:\s*\(?:\s*\))?\s*\{)/, lookbehind: !0, alias: "function" }, { pattern: /\b\w+(?=\s*\(\s*\)\s*\{)/, alias: "function" }], "for-or-select": { pattern: /(\b(?:for|select)\s+)\w+(?=\s+in\s)/, alias: "variable", lookbehind: !0 }, "assign-left": { pattern: /(^|[\s;|&]|[<>]\()\w+(?=\+?=)/, inside: { environment: { pattern: RegExp("(^|[\\s;|&]|[<>]\\()" + t), lookbehind: !0, alias: "constant" } }, alias: "variable", lookbehind: !0 }, string: [{ pattern: /((?:^|[^<])<<-?\s*)(\w+?)\s*(?:\r?\n|\r)(?:[\s\S])*?(?:\r?\n|\r)\2/, lookbehind: !0, greedy: !0, inside: n }, { pattern: /((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s*(?:\r?\n|\r)(?:[\s\S])*?(?:\r?\n|\r)\3/, lookbehind: !0, greedy: !0 }, { pattern: /(["'])(?:\\[\s\S]|\$\([^)]+\)|`[^`]+`|(?!\1)[^\\])*\1/, greedy: !0, inside: n }], environment: { pattern: RegExp("\\$?" + t), alias: "constant" }, variable: n.variable, function: { pattern: /(^|[\s;|&]|[<>]\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/, lookbehind: !0 }, keyword: { pattern: /(^|[\s;|&]|[<>]\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\s;|&])/, lookbehind: !0 }, builtin: { pattern: /(^|[\s;|&]|[<>]\()(?:\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\s;|&])/, lookbehind: !0, alias: "class-name" }, boolean: { pattern: /(^|[\s;|&]|[<>]\()(?:true|false)(?=$|[)\s;|&])/, lookbehind: !0 }, "file-descriptor": { pattern: /\B&\d\b/, alias: "important" }, operator: { pattern: /\d?<>|>\||\+=|==?|!=?|=~|<<[<-]?|[&\d]?>>|\d?[<>]&?|&[>&]?|\|[&|]?|<=?|>=?/, inside: { "file-descriptor": { pattern: /^\d/, alias: "important" } } }, punctuation: /\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/, number: { pattern: /(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/, lookbehind: !0 } }; for (var a = ["comment", "function-name", "for-or-select", "assign-left", "string", "environment", "function", "keyword", "builtin", "boolean", "file-descriptor", "operator", "punctuation", "number"], r = n.variable[1].inside, s = 0; s < a.length; s++)r[a[s]] = e.languages.bash[a[s]]; e.languages.shell = e.languages.bash }(Prism);
Prism.languages.c = Prism.languages.extend("clike", { "class-name": { pattern: /(\b(?:enum|struct)\s+)\w+/, lookbehind: !0 }, keyword: /\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\b/, operator: />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/, number: /(?:\b0x(?:[\da-f]+\.?[\da-f]*|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?)[ful]*/i }), Prism.languages.insertBefore("c", "string", { macro: { pattern: /(^\s*)#\s*[a-z]+(?:[^\r\n\\]|\\(?:\r\n|[\s\S]))*/im, lookbehind: !0, alias: "property", inside: { string: { pattern: /(#\s*include\s*)(?:<.+?>|("|')(?:\\?.)+?\2)/, lookbehind: !0 }, directive: { pattern: /(#\s*)\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\b/, lookbehind: !0, alias: "keyword" } } }, constant: /\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\b/ }), delete Prism.languages.c.boolean;
Prism.languages.cpp = Prism.languages.extend("c", { "class-name": { pattern: /(\b(?:class|enum|struct)\s+)\w+/, lookbehind: !0 }, keyword: /\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/, number: { pattern: /(?:\b0b[01']+|\b0x(?:[\da-f']+\.?[\da-f']*|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+\.?[\d']*|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]*/i, greedy: !0 }, operator: />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/, boolean: /\b(?:true|false)\b/ }), Prism.languages.insertBefore("cpp", "string", { "raw-string": { pattern: /R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/, alias: "string", greedy: !0 } });
!function (e) { var t = /#(?!\{).+/, n = { pattern: /#\{[^}]+\}/, alias: "variable" }; e.languages.coffeescript = e.languages.extend("javascript", { comment: t, string: [{ pattern: /'(?:\\[\s\S]|[^\\'])*'/, greedy: !0 }, { pattern: /"(?:\\[\s\S]|[^\\"])*"/, greedy: !0, inside: { interpolation: n } }], keyword: /\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/, "class-member": { pattern: /@(?!\d)\w+/, alias: "variable" } }), e.languages.insertBefore("coffeescript", "comment", { "multiline-comment": { pattern: /###[\s\S]+?###/, alias: "comment" }, "block-regex": { pattern: /\/{3}[\s\S]*?\/{3}/, alias: "regex", inside: { comment: t, interpolation: n } } }), e.languages.insertBefore("coffeescript", "string", { "inline-javascript": { pattern: /`(?:\\[\s\S]|[^\\`])*`/, inside: { delimiter: { pattern: /^`|`$/, alias: "punctuation" }, rest: e.languages.javascript } }, "multiline-string": [{ pattern: /'''[\s\S]*?'''/, greedy: !0, alias: "string" }, { pattern: /"""[\s\S]*?"""/, greedy: !0, alias: "string", inside: { interpolation: n } }] }), e.languages.insertBefore("coffeescript", "keyword", { property: /(?!\d)\w+(?=\s*:(?!:))/ }), delete e.languages.coffeescript["template-string"], e.languages.coffee = e.languages.coffeescript }(Prism);
Prism.languages.git = { comment: /^#.*/m, deleted: /^[-–].*/m, inserted: /^\+.*/m, string: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/m, command: { pattern: /^.*\$ git .*$/m, inside: { parameter: /\s--?\w+/m } }, coord: /^@@.*@@$/m, commit_sha1: /^commit \w{40}$/m };
Prism.languages.go = Prism.languages.extend("clike", { keyword: /\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/, builtin: /\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\b/, boolean: /\b(?:_|iota|nil|true|false)\b/, operator: /[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./, number: /(?:\b0x[a-f\d]+|(?:\b\d+\.?\d*|\B\.\d+)(?:e[-+]?\d+)?)i?/i, string: { pattern: /(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/, greedy: !0 } }), delete Prism.languages.go["class-name"];
!function (e) { var t = /\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|null|open|opens|package|private|protected|provides|public|requires|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\b/, a = /\b[A-Z](?:\w*[a-z]\w*)?\b/; e.languages.java = e.languages.extend("clike", { "class-name": [a, /\b[A-Z]\w*(?=\s+\w+\s*[;,=())])/], keyword: t, function: [e.languages.clike.function, { pattern: /(\:\:)[a-z_]\w*/, lookbehind: !0 }], number: /\b0b[01][01_]*L?\b|\b0x[\da-f_]*\.?[\da-f_p+-]+\b|(?:\b\d[\d_]*\.?[\d_]*|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i, operator: { pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\+\+|&&|\|\||::|[?:~]|[-+*/%&|^!=<>]=?)/m, lookbehind: !0 } }), e.languages.insertBefore("java", "string", { "triple-quoted-string": { pattern: /"""[ \t]*[\r\n](?:(?:"|"")?(?:\\.|[^"\\]))*"""/, greedy: !0, alias: "string" } }), e.languages.insertBefore("java", "class-name", { annotation: { alias: "punctuation", pattern: /(^|[^.])@\w+/, lookbehind: !0 }, namespace: { pattern: /(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)[a-z]\w*(?:\.[a-z]\w*)+/, lookbehind: !0, inside: { punctuation: /\./ } }, generics: { pattern: /<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<[\w\s,.&?]*>)*>)*>)*>/, inside: { "class-name": a, keyword: t, punctuation: /[<>(),.:]/, operator: /[?&|]/ } } }) }(Prism);
!function (h) { function v(e, n) { return "___" + e.toUpperCase() + n + "___" } Object.defineProperties(h.languages["markup-templating"] = {}, { buildPlaceholders: { value: function (a, r, e, o) { if (a.language === r) { var c = a.tokenStack = []; a.code = a.code.replace(e, function (e) { if ("function" == typeof o && !o(e)) return e; for (var n, t = c.length; -1 !== a.code.indexOf(n = v(r, t));)++t; return c[t] = e, n }), a.grammar = h.languages.markup } } }, tokenizePlaceholders: { value: function (p, k) { if (p.language === k && p.tokenStack) { p.grammar = h.languages[k]; var m = 0, d = Object.keys(p.tokenStack); !function e(n) { for (var t = 0; t < n.length && !(m >= d.length); t++) { var a = n[t]; if ("string" == typeof a || a.content && "string" == typeof a.content) { var r = d[m], o = p.tokenStack[r], c = "string" == typeof a ? a : a.content, i = v(k, r), u = c.indexOf(i); if (-1 < u) { ++m; var g = c.substring(0, u), l = new h.Token(k, h.tokenize(o, p.grammar), "language-" + k, o), s = c.substring(u + i.length), f = []; g && f.push.apply(f, e([g])), f.push(l), s && f.push.apply(f, e([s])), "string" == typeof a ? n.splice.apply(n, [t, 1].concat(f)) : a.content = f } } else a.content && e(a.content) } return n }(p.tokens) } } } }) }(Prism);
!function (n) { n.languages.php = n.languages.extend("clike", { keyword: /\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\b/i, boolean: { pattern: /\b(?:false|true)\b/i, alias: "constant" }, constant: [/\b[A-Z_][A-Z0-9_]*\b/, /\b(?:null)\b/i], comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/, lookbehind: !0 } }), n.languages.insertBefore("php", "string", { "shell-comment": { pattern: /(^|[^\\])#.*/, lookbehind: !0, alias: "comment" } }), n.languages.insertBefore("php", "comment", { delimiter: { pattern: /\?>$|^<\?(?:php(?=\s)|=)?/i, alias: "important" } }), n.languages.insertBefore("php", "keyword", { variable: /\$+(?:\w+\b|(?={))/i, package: { pattern: /(\\|namespace\s+|use\s+)[\w\\]+/, lookbehind: !0, inside: { punctuation: /\\/ } } }), n.languages.insertBefore("php", "operator", { property: { pattern: /(->)[\w]+/, lookbehind: !0 } }); var e = { pattern: /{\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\{])\$+(?:\w+(?:\[.+?]|->\w+)*)/, lookbehind: !0, inside: n.languages.php }; n.languages.insertBefore("php", "string", { "nowdoc-string": { pattern: /<<<'([^']+)'(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;/, greedy: !0, alias: "string", inside: { delimiter: { pattern: /^<<<'[^']+'|[a-z_]\w*;$/i, alias: "symbol", inside: { punctuation: /^<<<'?|[';]$/ } } } }, "heredoc-string": { pattern: /<<<(?:"([^"]+)"(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\1;|([a-z_]\w*)(?:\r\n?|\n)(?:.*(?:\r\n?|\n))*?\2;)/i, greedy: !0, alias: "string", inside: { delimiter: { pattern: /^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i, alias: "symbol", inside: { punctuation: /^<<<"?|[";]$/ } }, interpolation: e } }, "single-quoted-string": { pattern: /'(?:\\[\s\S]|[^\\'])*'/, greedy: !0, alias: "string" }, "double-quoted-string": { pattern: /"(?:\\[\s\S]|[^\\"])*"/, greedy: !0, alias: "string", inside: { interpolation: e } } }), delete n.languages.php.string, n.hooks.add("before-tokenize", function (e) { if (/<\?/.test(e.code)) { n.languages["markup-templating"].buildPlaceholders(e, "php", /<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#)(?:[^?\n\r]|\?(?!>))*|\/\*[\s\S]*?(?:\*\/|$))*?(?:\?>|$)/gi) } }), n.hooks.add("after-tokenize", function (e) { n.languages["markup-templating"].tokenizePlaceholders(e, "php") }) }(Prism);
!function (p) { var a = p.languages.javadoclike = { parameter: { pattern: /(^\s*(?:\/{3}|\*|\/\*\*)\s*@(?:param|arg|arguments)\s+)\w+/m, lookbehind: !0 }, keyword: { pattern: /(^\s*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m, lookbehind: !0 }, punctuation: /[{}]/ }; Object.defineProperty(a, "addSupport", { value: function (a, e) { "string" == typeof a && (a = [a]), a.forEach(function (a) { !function (a, e) { var n = "doc-comment", t = p.languages[a]; if (t) { var r = t[n]; if (!r) { var o = { "doc-comment": { pattern: /(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/, lookbehind: !0, alias: "comment" } }; r = (t = p.languages.insertBefore(a, "comment", o))[n] } if (r instanceof RegExp && (r = t[n] = { pattern: r }), Array.isArray(r)) for (var i = 0, s = r.length; i < s; i++)r[i] instanceof RegExp && (r[i] = { pattern: r[i] }), e(r[i]); else e(r) } }(a, function (a) { a.inside || (a.inside = {}), a.inside.rest = e }) }) } }), a.addSupport(["java", "javascript", "php"], a) }(Prism);
!function (a) { var e = { code: { pattern: /(^(?:\s*(?:\*\s*)*)).*[^*\s].+$/m, lookbehind: !0, inside: a.languages.java, alias: "language-java" } }; a.languages.javadoc = a.languages.extend("javadoclike", {}), a.languages.insertBefore("javadoc", "keyword", { "class-name": [{ pattern: /(@(?:exception|throws|see|link|linkplain|value)\s+(?:[a-z\d]+\.)*)[A-Z](?:\w*[a-z]\w*)?(?:\.[A-Z](?:\w*[a-z]\w*)?)*/, lookbehind: !0, inside: { punctuation: /\./ } }, { pattern: /(@param\s+)<[A-Z]\w*>/, lookbehind: !0, inside: { punctuation: /[.<>]/ } }], namespace: { pattern: /(@(?:exception|throws|see|link|linkplain)\s+)(?:[a-z\d]+\.)+/, lookbehind: !0, inside: { punctuation: /\./ } }, "code-section": [{ pattern: /(\{@code\s+)(?:[^{}]|\{[^{}]*\})+?(?=\s*\})/, lookbehind: !0, inside: e }, { pattern: /(<(code|tt)>\s*)[\s\S]+?(?=\s*<\/\2>)/, lookbehind: !0, inside: e }], tag: a.languages.markup.tag }), a.languages.javadoclike.addSupport("java", a.languages.javadoc) }(Prism);
Prism.languages.json = { property: { pattern: /"(?:\\.|[^\\"\r\n])*"(?=\s*:)/, greedy: !0 }, string: { pattern: /"(?:\\.|[^\\"\r\n])*"(?!\s*:)/, greedy: !0 }, comment: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/, number: /-?\d+\.?\d*(?:e[+-]?\d+)?/i, punctuation: /[{}[\],]/, operator: /:/, boolean: /\b(?:true|false)\b/, null: { pattern: /\bnull\b/, alias: "keyword" } };
Prism.languages.less = Prism.languages.extend("css", { comment: [/\/\*[\s\S]*?\*\//, { pattern: /(^|[^\\])\/\/.*/, lookbehind: !0 }], atrule: { pattern: /@[\w-]+?(?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};])*?(?=\s*\{)/, inside: { punctuation: /[:()]/ } }, selector: { pattern: /(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@])*?(?=\s*\{)/, inside: { variable: /@+[\w-]+/ } }, property: /(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/i, operator: /[+\-*\/]/ }), Prism.languages.insertBefore("less", "property", { variable: [{ pattern: /@[\w-]+\s*:/, inside: { punctuation: /:/ } }, /@@?[\w-]+/], "mixin-usage": { pattern: /([{;]\s*)[.#](?!\d)[\w-]+.*?(?=[(;])/, lookbehind: !0, alias: "function" } });
Prism.languages.lua = { comment: /^#!.+|--(?:\[(=*)\[[\s\S]*?\]\1\]|.*)/m, string: { pattern: /(["'])(?:(?!\1)[^\\\r\n]|\\z(?:\r\n|\s)|\\(?:\r\n|[\s\S]))*\1|\[(=*)\[[\s\S]*?\]\2\]/, greedy: !0 }, number: /\b0x[a-f\d]+\.?[a-f\d]*(?:p[+-]?\d+)?\b|\b\d+(?:\.\B|\.?\d*(?:e[+-]?\d+)?\b)|\B\.\d+(?:e[+-]?\d+)?\b/i, keyword: /\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\b/, function: /(?!\d)\w+(?=\s*(?:[({]))/, operator: [/[-+*%^&|#]|\/\/?|<[<=]?|>[>=]?|[=~]=?/, { pattern: /(^|[^.])\.\.(?!\.)/, lookbehind: !0 }], punctuation: /[\[\](){},;]|\.+|:+/ };
!function (d) { function n(n, e) { return n = n.replace(/<inner>/g, "(?:\\\\.|[^\\\\\\n\r]|(?:\r?\n|\r)(?!\r?\n|\r))"), e && (n = n + "|" + n.replace(/_/g, "\\*")), RegExp("((?:^|[^\\\\])(?:\\\\{2})*)(?:" + n + ")") } var e = "(?:\\\\.|``.+?``|`[^`\r\\n]+`|[^\\\\|\r\\n`])+", t = "\\|?__(?:\\|__)+\\|?(?:(?:\r?\n|\r)|$)".replace(/__/g, e), a = "\\|?[ \t]*:?-{3,}:?[ \t]*(?:\\|[ \t]*:?-{3,}:?[ \t]*)+\\|?(?:\r?\n|\r)"; d.languages.markdown = d.languages.extend("markup", {}), d.languages.insertBefore("markdown", "prolog", { blockquote: { pattern: /^>(?:[\t ]*>)*/m, alias: "punctuation" }, table: { pattern: RegExp("^" + t + a + "(?:" + t + ")*", "m"), inside: { "table-data-rows": { pattern: RegExp("^(" + t + a + ")(?:" + t + ")*$"), lookbehind: !0, inside: { "table-data": { pattern: RegExp(e), inside: d.languages.markdown }, punctuation: /\|/ } }, "table-line": { pattern: RegExp("^(" + t + ")" + a + "$"), lookbehind: !0, inside: { punctuation: /\||:?-{3,}:?/ } }, "table-header-row": { pattern: RegExp("^" + t + "$"), inside: { "table-header": { pattern: RegExp(e), alias: "important", inside: d.languages.markdown }, punctuation: /\|/ } } } }, code: [{ pattern: /(^[ \t]*(?:\r?\n|\r))(?: {4}|\t).+(?:(?:\r?\n|\r)(?: {4}|\t).+)*/m, lookbehind: !0, alias: "keyword" }, { pattern: /``.+?``|`[^`\r\n]+`/, alias: "keyword" }, { pattern: /^```[\s\S]*?^```$/m, greedy: !0, inside: { "code-block": { pattern: /^(```.*(?:\r?\n|\r))[\s\S]+?(?=(?:\r?\n|\r)^```$)/m, lookbehind: !0 }, "code-language": { pattern: /^(```).+/, lookbehind: !0 }, punctuation: /```/ } }], title: [{ pattern: /\S.*(?:\r?\n|\r)(?:==+|--+)(?=[ \t]*$)/m, alias: "important", inside: { punctuation: /==+$|--+$/ } }, { pattern: /(^\s*)#+.+/m, lookbehind: !0, alias: "important", inside: { punctuation: /^#+|#+$/ } }], hr: { pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m, lookbehind: !0, alias: "punctuation" }, list: { pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m, lookbehind: !0, alias: "punctuation" }, "url-reference": { pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/, inside: { variable: { pattern: /^(!?\[)[^\]]+/, lookbehind: !0 }, string: /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/, punctuation: /^[\[\]!:]|[<>]/ }, alias: "url" }, bold: { pattern: n("__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__", !0), lookbehind: !0, greedy: !0, inside: { content: { pattern: /(^..)[\s\S]+(?=..$)/, lookbehind: !0, inside: {} }, punctuation: /\*\*|__/ } }, italic: { pattern: n("_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_", !0), lookbehind: !0, greedy: !0, inside: { content: { pattern: /(^.)[\s\S]+(?=.$)/, lookbehind: !0, inside: {} }, punctuation: /[*_]/ } }, strike: { pattern: n("(~~?)(?:(?!~)<inner>)+?\\2", !1), lookbehind: !0, greedy: !0, inside: { content: { pattern: /(^~~?)[\s\S]+(?=\1$)/, lookbehind: !0, inside: {} }, punctuation: /~~?/ } }, url: { pattern: n('!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\t ]+"(?:\\\\.|[^"\\\\])*")?\\)| ?\\[(?:(?!\\])<inner>)+\\])', !1), lookbehind: !0, greedy: !0, inside: { variable: { pattern: /(\[)[^\]]+(?=\]$)/, lookbehind: !0 }, content: { pattern: /(^!?\[)[^\]]+(?=\])/, lookbehind: !0, inside: {} }, string: { pattern: /"(?:\\.|[^"\\])*"(?=\)$)/ } } } }), ["url", "bold", "italic", "strike"].forEach(function (e) { ["url", "bold", "italic", "strike"].forEach(function (n) { e !== n && (d.languages.markdown[e].inside.content.inside[n] = d.languages.markdown[n]) }) }), d.hooks.add("after-tokenize", function (n) { "markdown" !== n.language && "md" !== n.language || !function n(e) { if (e && "string" != typeof e) for (var t = 0, a = e.length; t < a; t++) { var i = e[t]; if ("code" === i.type) { var r = i.content[1], o = i.content[3]; if (r && o && "code-language" === r.type && "code-block" === o.type && "string" == typeof r.content) { var l = "language-" + r.content.trim().split(/\s+/)[0].toLowerCase(); o.alias ? "string" == typeof o.alias ? o.alias = [o.alias, l] : o.alias.push(l) : o.alias = [l] } } else n(i.content) } }(n.tokens) }), d.hooks.add("wrap", function (n) { if ("code-block" === n.type) { for (var e = "", t = 0, a = n.classes.length; t < a; t++) { var i = n.classes[t], r = /language-(.+)/.exec(i); if (r) { e = r[1]; break } } var o = d.languages[e]; if (o) { var l = n.content.replace(/&lt;/g, "<").replace(/&amp;/g, "&"); n.content = d.highlight(l, o, e) } else if (e && "none" !== e && d.plugins.autoloader) { var s = "md-" + (new Date).valueOf() + "-" + Math.floor(1e16 * Math.random()); n.attributes.id = s, d.plugins.autoloader.loadLanguages(e, function () { var n = document.getElementById(s); n && (n.innerHTML = d.highlight(n.textContent, d.languages[e], e)) }) } } }), d.languages.md = d.languages.markdown }(Prism);
Prism.languages.nginx = Prism.languages.extend("clike", { comment: { pattern: /(^|[^"{\\])#.*/, lookbehind: !0 }, keyword: /\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|events|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types|ssl_session_tickets|ssl_stapling|ssl_stapling_verify|ssl_ecdh_curve|ssl_trusted_certificate|more_set_headers|ssl_early_data)\b/i }), Prism.languages.insertBefore("nginx", "keyword", { variable: /\$[a-z_]+/i });
Prism.languages.python = { comment: { pattern: /(^|[^\\])#.*/, lookbehind: !0 }, "string-interpolation": { pattern: /(?:f|rf|fr)(?:("""|''')[\s\S]+?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i, greedy: !0, inside: { interpolation: { pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/, lookbehind: !0, inside: { "format-spec": { pattern: /(:)[^:(){}]+(?=}$)/, lookbehind: !0 }, "conversion-option": { pattern: /![sra](?=[:}]$)/, alias: "punctuation" }, rest: null } }, string: /[\s\S]+/ } }, "triple-quoted-string": { pattern: /(?:[rub]|rb|br)?("""|''')[\s\S]+?\1/i, greedy: !0, alias: "string" }, string: { pattern: /(?:[rub]|rb|br)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i, greedy: !0 }, function: { pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g, lookbehind: !0 }, "class-name": { pattern: /(\bclass\s+)\w+/i, lookbehind: !0 }, decorator: { pattern: /(^\s*)@\w+(?:\.\w+)*/im, lookbehind: !0, alias: ["annotation", "punctuation"], inside: { punctuation: /\./ } }, keyword: /\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/, builtin: /\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/, boolean: /\b(?:True|False|None)\b/, number: /(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*\.?\d*|\.\d+)(?:e[+-]?\d+)?j?\b/i, operator: /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/, punctuation: /[{}[\];(),.:]/ }, Prism.languages.python["string-interpolation"].inside.interpolation.inside.rest = Prism.languages.python, Prism.languages.py = Prism.languages.python;
!function (e) { e.languages.ruby = e.languages.extend("clike", { comment: [/#.*/, { pattern: /^=begin\s[\s\S]*?^=end/m, greedy: !0 }], keyword: /\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\b/ }); var n = { pattern: /#\{[^}]+\}/, inside: { delimiter: { pattern: /^#\{|\}$/, alias: "tag" }, rest: e.languages.ruby } }; delete e.languages.ruby.function, e.languages.insertBefore("ruby", "keyword", { regex: [{ pattern: /%r([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1[gim]{0,3}/, greedy: !0, inside: { interpolation: n } }, { pattern: /%r\((?:[^()\\]|\\[\s\S])*\)[gim]{0,3}/, greedy: !0, inside: { interpolation: n } }, { pattern: /%r\{(?:[^#{}\\]|#(?:\{[^}]+\})?|\\[\s\S])*\}[gim]{0,3}/, greedy: !0, inside: { interpolation: n } }, { pattern: /%r\[(?:[^\[\]\\]|\\[\s\S])*\][gim]{0,3}/, greedy: !0, inside: { interpolation: n } }, { pattern: /%r<(?:[^<>\\]|\\[\s\S])*>[gim]{0,3}/, greedy: !0, inside: { interpolation: n } }, { pattern: /(^|[^/])\/(?!\/)(?:\[.+?]|\\.|[^/\\\r\n])+\/[gim]{0,3}(?=\s*(?:$|[\r\n,.;})]))/, lookbehind: !0, greedy: !0 }], variable: /[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/, symbol: { pattern: /(^|[^:]):[a-zA-Z_]\w*(?:[?!]|\b)/, lookbehind: !0 }, "method-definition": { pattern: /(\bdef\s+)[\w.]+/, lookbehind: !0, inside: { function: /\w+$/, rest: e.languages.ruby } } }), e.languages.insertBefore("ruby", "number", { builtin: /\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\b/, constant: /\b[A-Z]\w*(?:[?!]|\b)/ }), e.languages.ruby.string = [{ pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/, greedy: !0, inside: { interpolation: n } }, { pattern: /%[qQiIwWxs]?\((?:[^()\\]|\\[\s\S])*\)/, greedy: !0, inside: { interpolation: n } }, { pattern: /%[qQiIwWxs]?\{(?:[^#{}\\]|#(?:\{[^}]+\})?|\\[\s\S])*\}/, greedy: !0, inside: { interpolation: n } }, { pattern: /%[qQiIwWxs]?\[(?:[^\[\]\\]|\\[\s\S])*\]/, greedy: !0, inside: { interpolation: n } }, { pattern: /%[qQiIwWxs]?<(?:[^<>\\]|\\[\s\S])*>/, greedy: !0, inside: { interpolation: n } }, { pattern: /("|')(?:#\{[^}]+\}|\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0, inside: { interpolation: n } }], e.languages.rb = e.languages.ruby }(Prism);
!function (n) { n.languages.smarty = { comment: /\{\*[\s\S]*?\*\}/, delimiter: { pattern: /^\{|\}$/i, alias: "punctuation" }, string: /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/, number: /\b0x[\dA-Fa-f]+|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][-+]?\d+)?/, variable: [/\$(?!\d)\w+/, /#(?!\d)\w+#/, { pattern: /(\.|->)(?!\d)\w+/, lookbehind: !0 }, { pattern: /(\[)(?!\d)\w+(?=\])/, lookbehind: !0 }], function: [{ pattern: /(\|\s*)@?(?!\d)\w+/, lookbehind: !0 }, /^\/?(?!\d)\w+/, /(?!\d)\w+(?=\()/], "attr-name": { pattern: /\w+\s*=\s*(?:(?!\d)\w+)?/, inside: { variable: { pattern: /(=\s*)(?!\d)\w+/, lookbehind: !0 }, operator: /=/ } }, punctuation: [/[\[\]().,:`]|->/], operator: [/[+\-*\/%]|==?=?|[!<>]=?|&&|\|\|?/, /\bis\s+(?:not\s+)?(?:div|even|odd)(?:\s+by)?\b/, /\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\b/], keyword: /\b(?:false|off|on|no|true|yes)\b/ }, n.hooks.add("before-tokenize", function (e) { var t = !1; n.languages["markup-templating"].buildPlaceholders(e, "smarty", /\{\*[\s\S]*?\*\}|\{[\s\S]+?\}/g, function (e) { return "{/literal}" === e && (t = !1), !t && ("{literal}" === e && (t = !0), !0) }) }), n.hooks.add("after-tokenize", function (e) { n.languages["markup-templating"].tokenizePlaceholders(e, "smarty") }) }(Prism);
Prism.languages.sql = { comment: { pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/, lookbehind: !0 }, variable: [{ pattern: /@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/, greedy: !0 }, /@[\w.$]+/], string: { pattern: /(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/, greedy: !0, lookbehind: !0 }, function: /\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i, keyword: /\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i, boolean: /\b(?:TRUE|FALSE|NULL)\b/i, number: /\b0x[\da-f]+\b|\b\d+\.?\d*|\B\.\d+\b/i, operator: /[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i, punctuation: /[;[\]()`,.]/ };
!function () { if ("undefined" != typeof self && self.Prism && self.document) { var l = "line-numbers", c = /\n(?!$)/g, m = function (e) { var t = a(e)["white-space"]; if ("pre-wrap" === t || "pre-line" === t) { var n = e.querySelector("code"), r = e.querySelector(".line-numbers-rows"), s = e.querySelector(".line-numbers-sizer"), i = n.textContent.split(c); s || ((s = document.createElement("span")).className = "line-numbers-sizer", n.appendChild(s)), s.style.display = "block", i.forEach(function (e, t) { s.textContent = e || "\n"; var n = s.getBoundingClientRect().height; r.children[t].style.height = n + "px" }), s.textContent = "", s.style.display = "none" } }, a = function (e) { return e ? window.getComputedStyle ? getComputedStyle(e) : e.currentStyle || null : null }; window.addEventListener("resize", function () { Array.prototype.forEach.call(document.querySelectorAll("pre." + l), m) }), Prism.hooks.add("complete", function (e) { if (e.code) { var t = e.element, n = t.parentNode; if (n && /pre/i.test(n.nodeName) && !t.querySelector(".line-numbers-rows")) { for (var r = !1, s = /(?:^|\s)line-numbers(?:\s|$)/, i = t; i; i = i.parentNode)if (s.test(i.className)) { r = !0; break } if (r) { t.className = t.className.replace(s, " "), s.test(n.className) || (n.className += " line-numbers"); var l, a = e.code.match(c), o = a ? a.length + 1 : 1, u = new Array(o + 1).join("<span></span>"); (l = document.createElement("span")).setAttribute("aria-hidden", "true"), l.className = "line-numbers-rows", l.innerHTML = u, n.hasAttribute("data-start") && (n.style.counterReset = "linenumber " + (parseInt(n.getAttribute("data-start"), 10) - 1)), e.element.appendChild(l), m(n), Prism.hooks.run("line-numbers", e) } } } }), Prism.hooks.add("line-numbers", function (e) { e.plugins = e.plugins || {}, e.plugins.lineNumbers = !0 }), Prism.plugins.lineNumbers = { getLine: function (e, t) { if ("PRE" === e.tagName && e.classList.contains(l)) { var n = e.querySelector(".line-numbers-rows"), r = parseInt(e.getAttribute("data-start"), 10) || 1, s = r + (n.children.length - 1); t < r && (t = r), s < t && (t = s); var i = t - r; return n.children[i] } } } } }();
!function () { if ("undefined" != typeof self && self.Prism && self.document) { var r = [], i = {}, a = function () { }; Prism.plugins.toolbar = {}; var t = Prism.plugins.toolbar.registerButton = function (t, a) { var e; e = "function" == typeof a ? a : function (t) { var e; return "function" == typeof a.onClick ? ((e = document.createElement("button")).type = "button", e.addEventListener("click", function () { a.onClick.call(this, t) })) : "string" == typeof a.url ? (e = document.createElement("a")).href = a.url : e = document.createElement("span"), a.className && e.classList.add(a.className), e.textContent = a.text, e }, t in i ? console.warn('There is a button with the key "' + t + '" registered already.') : r.push(i[t] = e) }, e = Prism.plugins.toolbar.hook = function (n) { var t = n.element.parentNode; if (t && /pre/i.test(t.nodeName) && !t.parentNode.classList.contains("code-toolbar")) { var e = document.createElement("div"); e.classList.add("code-toolbar"), t.parentNode.insertBefore(e, t), e.appendChild(t); var o = document.createElement("div"); o.classList.add("toolbar"), document.body.hasAttribute("data-toolbar-order") && (r = document.body.getAttribute("data-toolbar-order").split(",").map(function (t) { return i[t] || a })), r.forEach(function (t) { var e = t(n); if (e) { var a = document.createElement("div"); a.classList.add("toolbar-item"), a.appendChild(e), o.appendChild(a) } }), e.appendChild(o) } }; t("label", function (t) { var e = t.element.parentNode; if (e && /pre/i.test(e.nodeName) && e.hasAttribute("data-label")) { var a, n, o = e.getAttribute("data-label"); try { n = document.querySelector("template#" + o) } catch (t) { } return n ? a = n.content : (e.hasAttribute("data-url") ? (a = document.createElement("a")).href = e.getAttribute("data-url") : a = document.createElement("span"), a.textContent = o), a } }), Prism.hooks.add("complete", e) } }();
!function () { if ("undefined" != typeof self && self.Prism && self.document) if (Prism.plugins.toolbar) { var r = { html: "HTML", xml: "XML", svg: "SVG", mathml: "MathML", css: "CSS", clike: "C-like", js: "JavaScript", abap: "ABAP", abnf: "Augmented Backus–Naur form", antlr4: "ANTLR4", g4: "ANTLR4", apacheconf: "Apache Configuration", apl: "APL", aql: "AQL", arff: "ARFF", asciidoc: "AsciiDoc", adoc: "AsciiDoc", asm6502: "6502 Assembly", aspnet: "ASP.NET (C#)", autohotkey: "AutoHotkey", autoit: "AutoIt", shell: "Bash", basic: "BASIC", bbcode: "BBcode", bnf: "Backus–Naur form", rbnf: "Routing Backus–Naur form", csharp: "C#", cs: "C#", dotnet: "C#", cpp: "C++", cil: "CIL", coffee: "CoffeeScript", cmake: "CMake", csp: "Content-Security-Policy", "css-extras": "CSS Extras", django: "Django/Jinja2", jinja2: "Django/Jinja2", "dns-zone-file": "DNS zone file", "dns-zone": "DNS zone file", dockerfile: "Docker", ebnf: "Extended Backus–Naur form", ejs: "EJS", etlua: "Embedded Lua templating", erb: "ERB", fsharp: "F#", "firestore-security-rules": "Firestore security rules", ftl: "FreeMarker Template Language", gcode: "G-code", gdscript: "GDScript", gedcom: "GEDCOM", glsl: "GLSL", gml: "GameMaker Language", gamemakerlanguage: "GameMaker Language", graphql: "GraphQL", hs: "Haskell", hcl: "HCL", http: "HTTP", hpkp: "HTTP Public-Key-Pins", hsts: "HTTP Strict-Transport-Security", ichigojam: "IchigoJam", inform7: "Inform 7", javadoc: "JavaDoc", javadoclike: "JavaDoc-like", javastacktrace: "Java stack trace", jq: "JQ", jsdoc: "JSDoc", "js-extras": "JS Extras", "js-templates": "JS Templates", json: "JSON", jsonp: "JSONP", json5: "JSON5", latex: "LaTeX", tex: "TeX", context: "ConTeXt", lilypond: "LilyPond", ly: "LilyPond", emacs: "Lisp", elisp: "Lisp", "emacs-lisp": "Lisp", lolcode: "LOLCODE", md: "Markdown", "markup-templating": "Markup templating", matlab: "MATLAB", mel: "MEL", moon: "MoonScript", n1ql: "N1QL", n4js: "N4JS", n4jsd: "N4JS", "nand2tetris-hdl": "Nand To Tetris HDL", nasm: "NASM", nginx: "nginx", nsis: "NSIS", objectivec: "Objective-C", ocaml: "OCaml", opencl: "OpenCL", parigp: "PARI/GP", objectpascal: "Object Pascal", pcaxis: "PC-Axis", px: "PC-Axis", php: "PHP", phpdoc: "PHPDoc", "php-extras": "PHP Extras", plsql: "PL/SQL", powershell: "PowerShell", properties: ".properties", protobuf: "Protocol Buffers", py: "Python", q: "Q (kdb+ database)", jsx: "React JSX", tsx: "React TSX", renpy: "Ren'py", rest: "reST (reStructuredText)", robotframework: "Robot Framework", robot: "Robot Framework", rb: "Ruby", sas: "SAS", sass: "Sass (Sass)", scss: "Sass (Scss)", "shell-session": "Shell session", solidity: "Solidity (Ethereum)", soy: "Soy (Closure Template)", sparql: "SPARQL", rq: "SPARQL", "splunk-spl": "Splunk SPL", sqf: "SQF: Status Quo Function (Arma 3)", sql: "SQL", tap: "TAP", toml: "TOML", tt2: "Template Toolkit 2", trig: "TriG", ts: "TypeScript", "t4-cs": "T4 Text Templates (C#)", t4: "T4 Text Templates (C#)", "t4-vb": "T4 Text Templates (VB)", "t4-templating": "T4 templating", vbnet: "VB.Net", vhdl: "VHDL", vim: "vim", "visual-basic": "Visual Basic", vb: "Visual Basic", wasm: "WebAssembly", wiki: "Wiki markup", xeoracube: "XeoraCube", xojo: "Xojo (REALbasic)", xquery: "XQuery", yaml: "YAML", yml: "YAML" }; Prism.plugins.toolbar.registerButton("show-language", function (e) { var a = e.element.parentNode; if (a && /pre/i.test(a.nodeName)) { var s, t = a.getAttribute("data-language") || r[e.language] || ((s = e.language) ? (s.substring(0, 1).toUpperCase() + s.substring(1)).replace(/s(?=cript)/, "S") : s); if (t) { var o = document.createElement("span"); return o.textContent = t, o } } }) } else console.warn("Show Languages plugin loaded before Toolbar plugin.") }();
!function () { var i = Object.assign || function (e, n) { for (var t in n) n.hasOwnProperty(t) && (e[t] = n[t]); return e }; function e(e) { this.defaults = i({}, e) } function l(e) { for (var n = 0, t = 0; t < e.length; ++t)e.charCodeAt(t) == "\t".charCodeAt(0) && (n += 3); return e.length + n } e.prototype = { setDefaults: function (e) { this.defaults = i(this.defaults, e) }, normalize: function (e, n) { for (var t in n = i(this.defaults, n)) { var r = t.replace(/-(\w)/g, function (e, n) { return n.toUpperCase() }); "normalize" !== t && "setDefaults" !== r && n[t] && this[r] && (e = this[r].call(this, e, n[t])) } return e }, leftTrim: function (e) { return e.replace(/^\s+/, "") }, rightTrim: function (e) { return e.replace(/\s+$/, "") }, tabsToSpaces: function (e, n) { return n = 0 | n || 4, e.replace(/\t/g, new Array(++n).join(" ")) }, spacesToTabs: function (e, n) { return n = 0 | n || 4, e.replace(RegExp(" {" + n + "}", "g"), "\t") }, removeTrailing: function (e) { return e.replace(/\s*?$/gm, "") }, removeInitialLineFeed: function (e) { return e.replace(/^(?:\r?\n|\r)/, "") }, removeIndent: function (e) { var n = e.match(/^[^\S\n\r]*(?=\S)/gm); return n && n[0].length ? (n.sort(function (e, n) { return e.length - n.length }), n[0].length ? e.replace(RegExp("^" + n[0], "gm"), "") : e) : e }, indent: function (e, n) { return e.replace(/^[^\S\n\r]*(?=\S)/gm, new Array(++n).join("\t") + "$&") }, breakLines: function (e, n) { n = !0 === n ? 80 : 0 | n || 80; for (var t = e.split("\n"), r = 0; r < t.length; ++r)if (!(l(t[r]) <= n)) { for (var i = t[r].split(/(\s+)/g), o = 0, a = 0; a < i.length; ++a) { var s = l(i[a]); n < (o += s) && (i[a] = "\n" + i[a], o = s) } t[r] = i.join("") } return t.join("\n") } }, "undefined" != typeof module && module.exports && (module.exports = e), "undefined" != typeof Prism && (Prism.plugins.NormalizeWhitespace = new e({ "remove-trailing": !0, "remove-indent": !0, "left-trim": !0, "right-trim": !0 }), Prism.hooks.add("before-sanity-check", function (e) { var n = Prism.plugins.NormalizeWhitespace; if (!e.settings || !1 !== e.settings["whitespace-normalization"]) if (e.element && e.element.parentNode || !e.code) { var t = e.element.parentNode, r = /(?:^|\s)no-whitespace-normalization(?:\s|$)/; if (e.code && t && "pre" === t.nodeName.toLowerCase() && !r.test(t.className) && !r.test(e.element.className)) { for (var i = t.childNodes, o = "", a = "", s = !1, l = 0; l < i.length; ++l) { var c = i[l]; c == e.element ? s = !0 : "#text" === c.nodeName && (s ? a += c.nodeValue : o += c.nodeValue, t.removeChild(c), --l) } if (e.element.children.length && Prism.plugins.KeepMarkup) { var u = o + e.element.innerHTML + a; e.element.innerHTML = n.normalize(u, e.settings), e.code = e.element.textContent } else e.code = o + e.code + a, e.code = n.normalize(e.code, e.settings) } } else e.code = n.normalize(e.code, e.settings) })) }();
!function () { if ("undefined" != typeof self && self.Prism && self.document) { var c = /(?:^|\s)match-braces(?:\s|$)/, a = /(?:^|\s)brace-hover(?:\s|$)/, l = /(?:^|\s)brace-selected(?:\s|$)/, n = /(?:^|\s)no-brace-hover(?:\s|$)/, t = /(?:^|\s)no-brace-select(?:\s|$)/, u = { "(": ")", "[": "]", "{": "}" }, f = { "(": "brace-round", "[": "brace-square", "{": "brace-curly" }, m = 0, r = /^(pair-\d+-)(open|close)$/; Prism.hooks.add("complete", function (e) { var a = e.element, n = a.parentElement; if (n && "PRE" == n.tagName) { for (var t = [], r = a; r; r = r.parentElement)if (c.test(r.className)) { t.push("(", "[", "{"); break } if (0 != t.length) { n.__listenerAdded || (n.addEventListener("mousedown", function () { var e = n.querySelector("code"); Array.prototype.slice.call(e.querySelectorAll(".brace-selected")).forEach(function (e) { e.className = e.className.replace(l, " ") }) }), Object.defineProperty(n, "__listenerAdded", { value: !0 })); var o = Array.prototype.slice.call(a.querySelectorAll("span.token.punctuation")), i = []; t.forEach(function (e) { for (var a = u[e], n = f[e], t = [], r = [], s = 0; s < o.length; s++) { var c = o[s]; if (0 == c.childElementCount) { var l = c.textContent; l === e ? (i.push({ index: s, open: !0, element: c }), c.className += " " + n, c.className += " brace-open", r.push(s)) : l === a && (i.push({ index: s, open: !1, element: c }), c.className += " " + n, c.className += " brace-close", r.length && t.push([s, r.pop()])) } } t.forEach(function (e) { var a = "pair-" + m++ + "-", n = o[e[0]], t = o[e[1]]; n.id = a + "open", t.id = a + "close", [n, t].forEach(function (e) { e.addEventListener("mouseenter", p), e.addEventListener("mouseleave", d), e.addEventListener("click", h) }) }) }); var s = 0; i.sort(function (e, a) { return e.index - a.index }), i.forEach(function (e) { e.open ? (e.element.className += " brace-level-" + (s % 12 + 1), s++) : (s = Math.max(0, s - 1), e.element.className += " brace-level-" + (s % 12 + 1)) }) } } }) } function s(e) { var a = r.exec(e.id); return document.querySelector("#" + a[1] + ("open" == a[2] ? "close" : "open")) } function p() { for (var e = this.parentElement; e; e = e.parentElement)if (n.test(e.className)) return;[this, s(this)].forEach(function (e) { e.className = (e.className.replace(a, " ") + " brace-hover").replace(/\s+/g, " ") }) } function d() { [this, s(this)].forEach(function (e) { e.className = e.className.replace(a, " ") }) } function h() { for (var e = this.parentElement; e; e = e.parentElement)if (t.test(e.className)) return;[this, s(this)].forEach(function (e) { e.className = (e.className.replace(l, " ") + " brace-selected").replace(/\s+/g, " ") }) } }();


/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */
; (function (root, factory) { if (typeof define === 'function' && define.amd) { define(factory) } else if (typeof exports === 'object') { module.exports = factory() } else { root.NProgress = factory() } })(this, function () { var NProgress = {}; NProgress.version = '0.2.0'; var Settings = NProgress.settings = { minimum: 0.08, easing: 'ease', positionUsing: '', speed: 200, trickle: true, trickleRate: 0.02, trickleSpeed: 800, showSpinner: true, barSelector: '[role="bar"]', spinnerSelector: '[role="spinner"]', parent: 'body', template: '<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>' }; NProgress.configure = function (options) { var key, value; for (key in options) { value = options[key]; if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value } return this }; NProgress.status = null; NProgress.set = function (n) { var started = NProgress.isStarted(); n = clamp(n, Settings.minimum, 1); NProgress.status = (n === 1 ? null : n); var progress = NProgress.render(!started), bar = progress.querySelector(Settings.barSelector), speed = Settings.speed, ease = Settings.easing; progress.offsetWidth; queue(function (next) { if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS(); css(bar, barPositionCSS(n, speed, ease)); if (n === 1) { css(progress, { transition: 'none', opacity: 1 }); progress.offsetWidth; setTimeout(function () { css(progress, { transition: 'all ' + speed + 'ms linear', opacity: 0 }); setTimeout(function () { NProgress.remove(); next() }, speed) }, speed) } else { setTimeout(next, speed) } }); return this }; NProgress.isStarted = function () { return typeof NProgress.status === 'number' }; NProgress.start = function () { if (!NProgress.status) NProgress.set(0); var work = function () { setTimeout(function () { if (!NProgress.status) return; NProgress.trickle(); work() }, Settings.trickleSpeed) }; if (Settings.trickle) work(); return this }; NProgress.done = function (force) { if (!force && !NProgress.status) return this; return NProgress.inc(0.3 + 0.5 * Math.random()).set(1) }; NProgress.inc = function (amount) { var n = NProgress.status; if (!n) { return NProgress.start() } else { if (typeof amount !== 'number') { amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95) } n = clamp(n + amount, 0, 0.994); return NProgress.set(n) } }; NProgress.trickle = function () { return NProgress.inc(Math.random() * Settings.trickleRate) }; (function () { var initial = 0, current = 0; NProgress.promise = function ($promise) { if (!$promise || $promise.state() === "resolved") { return this } if (current === 0) { NProgress.start() } initial++; current++; $promise.always(function () { current--; if (current === 0) { initial = 0; NProgress.done() } else { NProgress.set((initial - current) / initial) } }); return this } })(); NProgress.render = function (fromStart) { if (NProgress.isRendered()) return document.getElementById('nprogress'); addClass(document.documentElement, 'nprogress-busy'); var progress = document.createElement('div'); progress.id = 'nprogress'; progress.innerHTML = Settings.template; var bar = progress.querySelector(Settings.barSelector), perc = fromStart ? '-100' : toBarPerc(NProgress.status || 0), parent = document.querySelector(Settings.parent), spinner; css(bar, { transition: 'all 0 linear', transform: 'translate3d(' + perc + '%,0,0)' }); if (!Settings.showSpinner) { spinner = progress.querySelector(Settings.spinnerSelector); spinner && removeElement(spinner) } if (parent != document.body) { addClass(parent, 'nprogress-custom-parent') } parent.appendChild(progress); return progress }; NProgress.remove = function () { removeClass(document.documentElement, 'nprogress-busy'); removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent'); var progress = document.getElementById('nprogress'); progress && removeElement(progress) }; NProgress.isRendered = function () { return !!document.getElementById('nprogress') }; NProgress.getPositioningCSS = function () { var bodyStyle = document.body.style; var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' : ('MozTransform' in bodyStyle) ? 'Moz' : ('msTransform' in bodyStyle) ? 'ms' : ('OTransform' in bodyStyle) ? 'O' : ''; if (vendorPrefix + 'Perspective' in bodyStyle) { return 'translate3d' } else if (vendorPrefix + 'Transform' in bodyStyle) { return 'translate' } else { return 'margin' } }; function clamp(n, min, max) { if (n < min) return min; if (n > max) return max; return n } function toBarPerc(n) { return (-1 + n) * 100 } function barPositionCSS(n, speed, ease) { var barCSS; if (Settings.positionUsing === 'translate3d') { barCSS = { transform: 'translate3d(' + toBarPerc(n) + '%,0,0)' } } else if (Settings.positionUsing === 'translate') { barCSS = { transform: 'translate(' + toBarPerc(n) + '%,0)' } } else { barCSS = { 'margin-left': toBarPerc(n) + '%' } } barCSS.transition = 'all ' + speed + 'ms ' + ease; return barCSS } var queue = (function () { var pending = []; function next() { var fn = pending.shift(); if (fn) { fn(next) } } return function (fn) { pending.push(fn); if (pending.length == 1) next() } })(); var css = (function () { var cssPrefixes = ['Webkit', 'O', 'Moz', 'ms'], cssProps = {}; function camelCase(string) { return string.replace(/^-ms-/, 'ms-').replace(/-([\da-z])/gi, function (match, letter) { return letter.toUpperCase() }) } function getVendorProp(name) { var style = document.body.style; if (name in style) return name; var i = cssPrefixes.length, capName = name.charAt(0).toUpperCase() + name.slice(1), vendorName; while (i--) { vendorName = cssPrefixes[i] + capName; if (vendorName in style) return vendorName } return name } function getStyleProp(name) { name = camelCase(name); return cssProps[name] || (cssProps[name] = getVendorProp(name)) } function applyCss(element, prop, value) { prop = getStyleProp(prop); element.style[prop] = value } return function (element, properties) { var args = arguments, prop, value; if (args.length == 2) { for (prop in properties) { value = properties[prop]; if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value) } } else { applyCss(element, args[1], args[2]) } } })(); function hasClass(element, name) { var list = typeof element == 'string' ? element : classList(element); return list.indexOf(' ' + name + ' ') >= 0 } function addClass(element, name) { var oldList = classList(element), newList = oldList + name; if (hasClass(oldList, name)) return; element.className = newList.substring(1) } function removeClass(element, name) { var oldList = classList(element), newList; if (!hasClass(element, name)) return; newList = oldList.replace(' ' + name + ' ', ' '); element.className = newList.substring(1, newList.length - 1) } function classList(element) { return (' ' + (element.className || '') + ' ').replace(/\s+/gi, ' ') } function removeElement(element) { element && element.parentNode && element.parentNode.removeChild(element) } return NProgress });

/** Shuffle 6.1.0 */
!function (t, e) { "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).Shuffle = e() }(this, (function () { "use strict"; var t = { exports: {} }; function e() { } e.prototype = { on: function (t, e, i) { var s = this.e || (this.e = {}); return (s[t] || (s[t] = [])).push({ fn: e, ctx: i }), this }, once: function (t, e, i) { var s = this; function n() { s.off(t, n), e.apply(i, arguments) } return n._ = e, this.on(t, n, i) }, emit: function (t) { for (var e = [].slice.call(arguments, 1), i = ((this.e || (this.e = {}))[t] || []).slice(), s = 0, n = i.length; s < n; s++)i[s].fn.apply(i[s].ctx, e); return this }, off: function (t, e) { var i = this.e || (this.e = {}), s = i[t], n = []; if (s && e) for (var o = 0, r = s.length; o < r; o++)s[o].fn !== e && s[o].fn._ !== e && n.push(s[o]); return n.length ? i[t] = n : delete i[t], this } }, t.exports = e, t.exports.TinyEmitter = e; function i() { } function s(t) { return parseFloat(t) || 0 } class n { constructor(t, e) { this.x = s(t), this.y = s(e) } static equals(t, e) { return t.x === e.x && t.y === e.y } } class o { constructor(t, e, i, s, n) { this.id = n, this.left = t, this.top = e, this.width = i, this.height = s } static intersects(t, e) { return t.left < e.left + e.width && e.left < t.left + t.width && t.top < e.top + e.height && e.top < t.top + t.height } } var r = { BASE: "shuffle", SHUFFLE_ITEM: "shuffle-item", VISIBLE: "shuffle-item--visible", HIDDEN: "shuffle-item--hidden" }; let h = 0; class l { constructor(t, e) { h += 1, this.id = h, this.element = t, this.isRTL = e, this.isVisible = !0, this.isHidden = !1 } show() { this.isVisible = !0, this.element.classList.remove(r.HIDDEN), this.element.classList.add(r.VISIBLE), this.element.removeAttribute("aria-hidden") } hide() { this.isVisible = !1, this.element.classList.remove(r.VISIBLE), this.element.classList.add(r.HIDDEN), this.element.setAttribute("aria-hidden", !0) } init() { this.addClasses([r.SHUFFLE_ITEM, r.VISIBLE]), this.applyCss(l.Css.INITIAL), this.applyCss(this.isRTL ? l.Css.DIRECTION.rtl : l.Css.DIRECTION.ltr), this.scale = l.Scale.VISIBLE, this.point = new n } addClasses(t) { t.forEach((t => { this.element.classList.add(t) })) } removeClasses(t) { t.forEach((t => { this.element.classList.remove(t) })) } applyCss(t) { Object.keys(t).forEach((e => { this.element.style[e] = t[e] })) } dispose() { this.removeClasses([r.HIDDEN, r.VISIBLE, r.SHUFFLE_ITEM]), this.element.removeAttribute("style"), this.element = null } } l.Css = { INITIAL: { position: "absolute", top: 0, visibility: "visible", willChange: "transform" }, DIRECTION: { ltr: { left: 0 }, rtl: { right: 0 } }, VISIBLE: { before: { opacity: 1, visibility: "visible" }, after: { transitionDelay: "" } }, HIDDEN: { before: { opacity: 0 }, after: { visibility: "hidden", transitionDelay: "" } } }, l.Scale = { VISIBLE: 1, HIDDEN: .001 }; let a = null; var d = () => { if (null !== a) return a; const t = document.body || document.documentElement, e = document.createElement("div"); e.style.cssText = "width:10px;padding:2px;box-sizing:border-box;", t.appendChild(e); const { width: i } = window.getComputedStyle(e, null); return a = 10 === Math.round(s(i)), t.removeChild(e), a }; function u(t, e) { let i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : window.getComputedStyle(t, null), n = s(i[e]); return d() || "width" !== e ? d() || "height" !== e || (n += s(i.paddingTop) + s(i.paddingBottom) + s(i.borderTopWidth) + s(i.borderBottomWidth)) : n += s(i.paddingLeft) + s(i.paddingRight) + s(i.borderLeftWidth) + s(i.borderRightWidth), n } const m = { reverse: !1, by: null, compare: null, randomize: !1, key: "element" }; function c(t, e) { const i = { ...m, ...e }, s = Array.from(t); let n = !1; return t.length ? i.randomize ? function (t) { let e = t.length; for (; e;) { e -= 1; const i = Math.floor(Math.random() * (e + 1)), s = t[i]; t[i] = t[e], t[e] = s } return t }(t) : ("function" == typeof i.by ? t.sort(((t, e) => { if (n) return 0; const s = i.by(t[i.key]), o = i.by(e[i.key]); return void 0 === s && void 0 === o ? (n = !0, 0) : s < o || "sortFirst" === s || "sortLast" === o ? -1 : s > o || "sortLast" === s || "sortFirst" === o ? 1 : 0 })) : "function" == typeof i.compare && t.sort(i.compare), n ? s : (i.reverse && t.reverse(), t)) : [] } const p = {}, f = "transitionend"; let g = 0; function _(t) { return !!p[t] && (p[t].element.removeEventListener(f, p[t].listener), p[t] = null, !0) } function y(t, e) { const i = (g += 1, f + g), s = t => { t.currentTarget === t.target && (_(i), e(t)) }; return t.addEventListener(f, s), p[i] = { element: t, listener: s }, i } function I(t) { return Math.max(...t) } function E(t, e, i, s) { let n = t / e; return Math.abs(Math.round(n) - n) < s && (n = Math.round(n)), Math.min(Math.ceil(n), i) } function v(t, e, i) { if (1 === e) return t; const s = []; for (let n = 0; n <= i - e; n++)s.push(I(t.slice(n, n + e))); return s } function b(t, e) { const i = (s = t, Math.min(...s)); var s; for (let s = 0, n = t.length; s < n; s++)if (t[s] >= i - e && t[s] <= i + e) return s; return 0 } function T(t, e) { const i = {}; t.forEach((t => { i[t.top] ? i[t.top].push(t) : i[t.top] = [t] })); let s = []; const r = [], h = []; return Object.keys(i).forEach((t => { const n = i[t]; r.push(n); const l = n[n.length - 1], a = l.left + l.width, d = Math.round((e - a) / 2); let u = n, m = !1; if (d > 0) { const t = []; m = n.every((e => { const i = new o(e.left + d, e.top, e.width, e.height, e.id), n = !s.some((t => o.intersects(i, t))); return t.push(i), n })), m && (u = t) } if (!m) { let t; if (n.some((e => s.some((i => { const s = o.intersects(e, i); return s && (t = i), s }))))) { const e = h.findIndex((e => e.includes(t))); h.splice(e, 1, r[e]) } } s = s.concat(u), h.push(u) })), h.flat().sort(((t, e) => t.id - e.id)).map((t => new n(t.left, t.top))) } function S(t) { return Array.from(new Set(t)) } let C = 0; class L extends t.exports { constructor(t) { let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; super(), this.options = { ...L.options, ...e }, this.lastSort = {}, this.group = L.ALL_ITEMS, this.lastFilter = L.ALL_ITEMS, this.isEnabled = !0, this.isDestroyed = !1, this.isInitialized = !1, this._transitions = [], this.isTransitioning = !1, this._queue = []; const i = this._getElementOption(t); if (!i) throw new TypeError("Shuffle needs to be initialized with an element."); this.element = i, this.id = `shuffle_${C}`, C += 1, this._init(), this.isInitialized = !0 } _init() { if (this.items = this._getItems(), this.sortedItems = this.items, this.options.sizer = this._getElementOption(this.options.sizer), this.element.classList.add(L.Classes.BASE), this._initItems(this.items), "complete" !== document.readyState) { const t = this.layout.bind(this); window.addEventListener("load", (function e() { window.removeEventListener("load", e), t() })) } const t = window.getComputedStyle(this.element, null), e = L.getSize(this.element).width; this._validateStyles(t), this._setColumns(e), this.filter(this.options.group, this.options.initialSort), this._rafId = null, "ResizeObserver" in window && (this._resizeObserver = new ResizeObserver(this._handleResizeCallback.bind(this)), this._resizeObserver.observe(this.element)), this.element.offsetWidth, this.setItemTransitions(this.items), this.element.style.transition = `height ${this.options.speed}ms ${this.options.easing}` } _getElementOption(t) { return "string" == typeof t ? this.element.querySelector(t) : t && t.nodeType && 1 === t.nodeType ? t : t && t.jquery ? t[0] : null } _validateStyles(t) { "static" === t.position && (this.element.style.position = "relative"), "hidden" !== t.overflow && (this.element.style.overflow = "hidden") } _filter() { let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.lastFilter, e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.items; const i = this._getFilteredSets(t, e); return this._toggleFilterClasses(i), this.lastFilter = t, "string" == typeof t && (this.group = t), i } _getFilteredSets(t, e) { let i = []; const s = []; return t === L.ALL_ITEMS ? i = e : e.forEach((e => { this._doesPassFilter(t, e.element) ? i.push(e) : s.push(e) })), { visible: i, hidden: s } } _doesPassFilter(t, e) { if ("function" == typeof t) return t.call(e, e, this); const i = e.dataset[L.FILTER_ATTRIBUTE_KEY], s = this.options.delimiter ? i.split(this.options.delimiter) : JSON.parse(i); function n(t) { return s.includes(t) } return Array.isArray(t) ? this.options.filterMode === L.FilterMode.ANY ? t.some(n) : t.every(n) : s.includes(t) } _toggleFilterClasses(t) { let { visible: e, hidden: i } = t; e.forEach((t => { t.show() })), i.forEach((t => { t.hide() })) } _initItems(t) { t.forEach((t => { t.init() })) } _disposeItems(t) { t.forEach((t => { t.dispose() })) } _updateItemCount() { this.visibleItems = this._getFilteredItems().length } setItemTransitions(t) { const { speed: e, easing: i } = this.options, s = this.options.useTransforms ? ["transform"] : ["top", "left"], n = Object.keys(l.Css.HIDDEN.before).map((t => t.replace(/([A-Z])/g, ((t, e) => `-${e.toLowerCase()}`)))), o = s.concat(n).join(); t.forEach((t => { t.element.style.transitionDuration = `${e}ms`, t.element.style.transitionTimingFunction = i, t.element.style.transitionProperty = o })) } _getItems() { return Array.from(this.element.children).filter((t => t.matches(this.options.itemSelector))).map((t => new l(t, this.options.isRTL))) } _mergeNewItems(t) { const e = Array.from(this.element.children); return c(this.items.concat(t), { by: t => e.indexOf(t) }) } _getFilteredItems() { return this.items.filter((t => t.isVisible)) } _getConcealedItems() { return this.items.filter((t => !t.isVisible)) } _getColumnSize(t, e) { let i; return i = "function" == typeof this.options.columnWidth ? this.options.columnWidth(t) : this.options.sizer ? L.getSize(this.options.sizer).width : this.options.columnWidth ? this.options.columnWidth : this.items.length > 0 ? L.getSize(this.items[0].element, !0).width : t, 0 === i && (i = t), i + e } _getGutterSize(t) { let e; return e = "function" == typeof this.options.gutterWidth ? this.options.gutterWidth(t) : this.options.sizer ? u(this.options.sizer, "marginLeft") : this.options.gutterWidth, e } _setColumns() { let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : L.getSize(this.element).width; const e = this._getGutterSize(t), i = this._getColumnSize(t, e); let s = (t + e) / i; Math.abs(Math.round(s) - s) < this.options.columnThreshold && (s = Math.round(s)), this.cols = Math.max(Math.floor(s || 0), 1), this.containerWidth = t, this.colWidth = i } _setContainerSize() { this.element.style.height = `${this._getContainerSize()}px` } _getContainerSize() { return I(this.positions) } _getStaggerAmount(t) { return Math.min(t * this.options.staggerAmount, this.options.staggerAmountMax) } _dispatch(t) { let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; this.isDestroyed || (e.shuffle = this, this.emit(t, e)) } _resetCols() { let t = this.cols; for (this.positions = []; t;)t -= 1, this.positions.push(0) } _layout(t) { const e = this._getNextPositions(t); let i = 0; t.forEach(((t, s) => { function o() { t.applyCss(l.Css.VISIBLE.after) } if (n.equals(t.point, e[s]) && !t.isHidden) return t.applyCss(l.Css.VISIBLE.before), void o(); t.point = e[s], t.scale = l.Scale.VISIBLE, t.isHidden = !1; const r = this.getStylesForTransition(t, l.Css.VISIBLE.before); r.transitionDelay = `${this._getStaggerAmount(i)}ms`, this._queue.push({ item: t, styles: r, callback: o }), i += 1 })) } _getNextPositions(t) { if (this.options.isCentered) { const e = t.map(((t, e) => { const i = L.getSize(t.element, !0), s = this._getItemPosition(i); return new o(s.x, s.y, i.width, i.height, e) })); return this.getTransformedPositions(e, this.containerWidth) } return t.map((t => this._getItemPosition(L.getSize(t.element, !0)))) } _getItemPosition(t) { return function (t) { let { itemSize: e, positions: i, gridSize: s, total: o, threshold: r, buffer: h } = t; const l = E(e.width, s, o, r), a = v(i, l, o), d = b(a, h), u = new n(s * d, a[d]), m = a[d] + e.height; for (let t = 0; t < l; t++)i[d + t] = m; return u }({ itemSize: t, positions: this.positions, gridSize: this.colWidth, total: this.cols, threshold: this.options.columnThreshold, buffer: this.options.buffer }) } getTransformedPositions(t, e) { return T(t, e) } _shrink() { let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._getConcealedItems(), e = 0; t.forEach((t => { function i() { t.applyCss(l.Css.HIDDEN.after) } if (t.isHidden) return t.applyCss(l.Css.HIDDEN.before), void i(); t.scale = l.Scale.HIDDEN, t.isHidden = !0; const s = this.getStylesForTransition(t, l.Css.HIDDEN.before); s.transitionDelay = `${this._getStaggerAmount(e)}ms`, this._queue.push({ item: t, styles: s, callback: i }), e += 1 })) } _handleResizeCallback(t) { if (this.isEnabled && !this.isDestroyed) for (const e of t) Math.round(e.contentRect.width) !== Math.round(this.containerWidth) && (cancelAnimationFrame(this._rafId), this._rafId = requestAnimationFrame(this.update.bind(this))) } getStylesForTransition(t, e) { const i = { ...e }; if (this.options.useTransforms) { const e = this.options.isRTL ? "-" : "", s = this.options.roundTransforms ? Math.round(t.point.x) : t.point.x, n = this.options.roundTransforms ? Math.round(t.point.y) : t.point.y; i.transform = `translate(${e}${s}px, ${n}px) scale(${t.scale})` } else this.options.isRTL ? i.right = `${t.point.x}px` : i.left = `${t.point.x}px`, i.top = `${t.point.y}px`; return i } _whenTransitionDone(t, e, i) { const s = y(t, (t => { e(), i(null, t) })); this._transitions.push(s) } _getTransitionFunction(t) { return e => { t.item.applyCss(t.styles), this._whenTransitionDone(t.item.element, t.callback, e) } } _processQueue() { this.isTransitioning && this._cancelMovement(); const t = this.options.speed > 0, e = this._queue.length > 0; e && t && this.isInitialized ? this._startTransitions(this._queue) : e ? (this._styleImmediately(this._queue), this._dispatch(L.EventType.LAYOUT)) : this._dispatch(L.EventType.LAYOUT), this._queue.length = 0 } _startTransitions(t) { this.isTransitioning = !0; !function (t, e, s) { s || ("function" == typeof e ? (s = e, e = null) : s = i); var n = t && t.length; if (!n) return s(null, []); var o = !1, r = new Array(n); function h(t) { return function (e, i) { if (!o) { if (e) return s(e, r), void (o = !0); r[t] = i, --n || s(null, r) } } } t.forEach(e ? function (t, i) { t.call(e, h(i)) } : function (t, e) { t(h(e)) }) }(t.map((t => this._getTransitionFunction(t))), this._movementFinished.bind(this)) } _cancelMovement() { this._transitions.forEach(_), this._transitions.length = 0, this.isTransitioning = !1 } _styleImmediately(t) { if (t.length) { const e = t.map((t => t.item.element)); L._skipTransitions(e, (() => { t.forEach((t => { t.item.applyCss(t.styles), t.callback() })) })) } } _movementFinished() { this._transitions.length = 0, this.isTransitioning = !1, this._dispatch(L.EventType.LAYOUT) } filter(t, e) { this.isEnabled && ((!t || t && 0 === t.length) && (t = L.ALL_ITEMS), this._filter(t), this._shrink(), this._updateItemCount(), this.sort(e)) } sort() { let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.lastSort; if (!this.isEnabled) return; this._resetCols(); const e = c(this._getFilteredItems(), t); this.sortedItems = e, this._layout(e), this._processQueue(), this._setContainerSize(), this.lastSort = t } update() { let { recalculateSizes: t = !0, force: e = !1 } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; (this.isEnabled || e) && (t && this._setColumns(), this.sort()) } layout() { this.update({ recalculateSizes: !0 }) } add(t) { const e = S(t).map((t => new l(t, this.options.isRTL))); this._initItems(e), this._resetCols(); const i = c(this._mergeNewItems(e), this.lastSort), s = this._filter(this.lastFilter, i), n = t => e.includes(t), o = t => { t.scale = l.Scale.HIDDEN, t.isHidden = !0, t.applyCss(l.Css.HIDDEN.before), t.applyCss(l.Css.HIDDEN.after) }, r = this._getNextPositions(s.visible); s.visible.forEach(((t, e) => { n(t) && (t.point = r[e], o(t), t.applyCss(this.getStylesForTransition(t, {}))) })), s.hidden.forEach((t => { n(t) && o(t) })), this.element.offsetWidth, this.setItemTransitions(e), this.items = this._mergeNewItems(e), this.filter(this.lastFilter) } disable() { this.isEnabled = !1 } enable() { let t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]; this.isEnabled = !0, t && this.update() } remove(t) { if (!t.length) return; const e = S(t), i = e.map((t => this.getItemByElement(t))).filter((t => !!t)); this._toggleFilterClasses({ visible: [], hidden: i }), this._shrink(i), this.sort(), this.items = this.items.filter((t => !i.includes(t))), this._updateItemCount(), this.once(L.EventType.LAYOUT, (() => { this._disposeItems(i), e.forEach((t => { t.parentNode.removeChild(t) })), this._dispatch(L.EventType.REMOVED, { collection: e }) })) } getItemByElement(t) { return this.items.find((e => e.element === t)) } resetItems() { this._disposeItems(this.items), this.isInitialized = !1, this.items = this._getItems(), this._initItems(this.items), this.once(L.EventType.LAYOUT, (() => { this.setItemTransitions(this.items), this.isInitialized = !0 })), this.filter(this.lastFilter) } destroy() { this._cancelMovement(), this._resizeObserver && (this._resizeObserver.unobserve(this.element), this._resizeObserver = null), this.element.classList.remove("shuffle"), this.element.removeAttribute("style"), this._disposeItems(this.items), this.items.length = 0, this.sortedItems.length = 0, this._transitions.length = 0, this.options.sizer = null, this.element = null, this.isDestroyed = !0, this.isEnabled = !1 } static getSize(t) { let e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]; const i = window.getComputedStyle(t, null); let s = u(t, "width", i), n = u(t, "height", i); if (e) { s += u(t, "marginLeft", i) + u(t, "marginRight", i), n += u(t, "marginTop", i) + u(t, "marginBottom", i) } return { width: s, height: n } } static _skipTransitions(t, e) { const i = t.map((t => { const { style: e } = t, i = e.transitionDuration, s = e.transitionDelay; return e.transitionDuration = "0ms", e.transitionDelay = "0ms", { duration: i, delay: s } })); e(), t[0].offsetWidth, t.forEach(((t, e) => { t.style.transitionDuration = i[e].duration, t.style.transitionDelay = i[e].delay })) } } return L.ShuffleItem = l, L.ALL_ITEMS = "all", L.FILTER_ATTRIBUTE_KEY = "groups", L.EventType = { LAYOUT: "shuffle:layout", REMOVED: "shuffle:removed" }, L.Classes = r, L.FilterMode = { ANY: "any", ALL: "all" }, L.options = { group: L.ALL_ITEMS, speed: 250, easing: "cubic-bezier(0.4, 0.0, 0.2, 1)", itemSelector: "*", sizer: null, gutterWidth: 0, columnWidth: 0, delimiter: null, buffer: 0, columnThreshold: .01, initialSort: null, staggerAmount: 15, staggerAmountMax: 150, useTransforms: !0, filterMode: L.FilterMode.ANY, isCentered: !1, isRTL: !1, roundTransforms: !0 }, L.Point = n, L.Rect = o, L.__sorter = c, L.__getColumnSpan = E, L.__getAvailablePositions = v, L.__getShortColumn = b, L.__getCenteredPositions = T, L }));

/*!
 * Flickity PACKAGED v2.3.0
 * Touch, responsive, flickable carousels
 *
 * Licensed GPLv3 for open source use
 * or Flickity Commercial License for commercial use
 *
 * https://flickity.metafizzy.co
 * Copyright 2015-2021 Metafizzy
 */
(function (e, i) { if (typeof define == "function" && define.amd) { define("jquery-bridget/jquery-bridget", ["jquery"], function (t) { return i(e, t) }) } else if (typeof module == "object" && module.exports) { module.exports = i(e, require("jquery")) } else { e.jQueryBridget = i(e, e.jQuery) } })(window, function t(e, r) { "use strict"; var o = Array.prototype.slice; var i = e.console; var u = typeof i == "undefined" ? function () { } : function (t) { i.error(t) }; function n(h, s, c) { c = c || r || e.jQuery; if (!c) { return } if (!s.prototype.option) { s.prototype.option = function (t) { if (!c.isPlainObject(t)) { return } this.options = c.extend(true, this.options, t) } } c.fn[h] = function (t) { if (typeof t == "string") { var e = o.call(arguments, 1); return i(this, t, e) } n(this, t); return this }; function i(t, r, o) { var a; var l = "$()." + h + '("' + r + '")'; t.each(function (t, e) { var i = c.data(e, h); if (!i) { u(h + " not initialized. Cannot call methods, i.e. " + l); return } var n = i[r]; if (!n || r.charAt(0) == "_") { u(l + " is not a valid method"); return } var s = n.apply(i, o); a = a === undefined ? s : a }); return a !== undefined ? a : t } function n(t, n) { t.each(function (t, e) { var i = c.data(e, h); if (i) { i.option(n); i._init() } else { i = new s(e, n); c.data(e, h, i) } }) } a(c) } function a(t) { if (!t || t && t.bridget) { return } t.bridget = n } a(r || e.jQuery); return n }); (function (t, e) { if (typeof define == "function" && define.amd) { define("ev-emitter/ev-emitter", e) } else if (typeof module == "object" && module.exports) { module.exports = e() } else { t.EvEmitter = e() } })(typeof window != "undefined" ? window : this, function () { function t() { } var e = t.prototype; e.on = function (t, e) { if (!t || !e) { return } var i = this._events = this._events || {}; var n = i[t] = i[t] || []; if (n.indexOf(e) == -1) { n.push(e) } return this }; e.once = function (t, e) { if (!t || !e) { return } this.on(t, e); var i = this._onceEvents = this._onceEvents || {}; var n = i[t] = i[t] || {}; n[e] = true; return this }; e.off = function (t, e) { var i = this._events && this._events[t]; if (!i || !i.length) { return } var n = i.indexOf(e); if (n != -1) { i.splice(n, 1) } return this }; e.emitEvent = function (t, e) { var i = this._events && this._events[t]; if (!i || !i.length) { return } i = i.slice(0); e = e || []; var n = this._onceEvents && this._onceEvents[t]; for (var s = 0; s < i.length; s++) { var r = i[s]; var o = n && n[r]; if (o) { this.off(t, r); delete n[r] } r.apply(this, e) } return this }; e.allOff = function () { delete this._events; delete this._onceEvents }; return t });
/*!
 * getSize v2.0.3
 * measure size of elements
 * MIT license
 */
(function (t, e) { if (typeof define == "function" && define.amd) { define("get-size/get-size", e) } else if (typeof module == "object" && module.exports) { module.exports = e() } else { t.getSize = e() } })(window, function t() { "use strict"; function m(t) { var e = parseFloat(t); var i = t.indexOf("%") == -1 && !isNaN(e); return i && e } function e() { } var i = typeof console == "undefined" ? e : function (t) { console.error(t) }; var y = ["paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "marginLeft", "marginRight", "marginTop", "marginBottom", "borderLeftWidth", "borderRightWidth", "borderTopWidth", "borderBottomWidth"]; var b = y.length; function E() { var t = { width: 0, height: 0, innerWidth: 0, innerHeight: 0, outerWidth: 0, outerHeight: 0 }; for (var e = 0; e < b; e++) { var i = y[e]; t[i] = 0 } return t } function S(t) { var e = getComputedStyle(t); if (!e) { i("Style returned " + e + ". Are you running this code in a hidden iframe on Firefox? " + "See https://bit.ly/getsizebug1") } return e } var n = false; var C; function x() { if (n) { return } n = true; var t = document.createElement("div"); t.style.width = "200px"; t.style.padding = "1px 2px 3px 4px"; t.style.borderStyle = "solid"; t.style.borderWidth = "1px 2px 3px 4px"; t.style.boxSizing = "border-box"; var e = document.body || document.documentElement; e.appendChild(t); var i = S(t); C = Math.round(m(i.width)) == 200; s.isBoxSizeOuter = C; e.removeChild(t) } function s(t) { x(); if (typeof t == "string") { t = document.querySelector(t) } if (!t || typeof t != "object" || !t.nodeType) { return } var e = S(t); if (e.display == "none") { return E() } var i = {}; i.width = t.offsetWidth; i.height = t.offsetHeight; var n = i.isBorderBox = e.boxSizing == "border-box"; for (var s = 0; s < b; s++) { var r = y[s]; var o = e[r]; var a = parseFloat(o); i[r] = !isNaN(a) ? a : 0 } var l = i.paddingLeft + i.paddingRight; var h = i.paddingTop + i.paddingBottom; var c = i.marginLeft + i.marginRight; var u = i.marginTop + i.marginBottom; var d = i.borderLeftWidth + i.borderRightWidth; var f = i.borderTopWidth + i.borderBottomWidth; var p = n && C; var v = m(e.width); if (v !== false) { i.width = v + (p ? 0 : l + d) } var g = m(e.height); if (g !== false) { i.height = g + (p ? 0 : h + f) } i.innerWidth = i.width - (l + d); i.innerHeight = i.height - (h + f); i.outerWidth = i.width + c; i.outerHeight = i.height + u; return i } return s }); (function (t, e) { "use strict"; if (typeof define == "function" && define.amd) { define("desandro-matches-selector/matches-selector", e) } else if (typeof module == "object" && module.exports) { module.exports = e() } else { t.matchesSelector = e() } })(window, function t() { "use strict"; var n = function () { var t = window.Element.prototype; if (t.matches) { return "matches" } if (t.matchesSelector) { return "matchesSelector" } var e = ["webkit", "moz", "ms", "o"]; for (var i = 0; i < e.length; i++) { var n = e[i]; var s = n + "MatchesSelector"; if (t[s]) { return s } } }(); return function t(e, i) { return e[n](i) } }); (function (e, i) { if (typeof define == "function" && define.amd) { define("fizzy-ui-utils/utils", ["desandro-matches-selector/matches-selector"], function (t) { return i(e, t) }) } else if (typeof module == "object" && module.exports) { module.exports = i(e, require("desandro-matches-selector")) } else { e.fizzyUIUtils = i(e, e.matchesSelector) } })(window, function t(h, r) { var c = {}; c.extend = function (t, e) { for (var i in e) { t[i] = e[i] } return t }; c.modulo = function (t, e) { return (t % e + e) % e }; var i = Array.prototype.slice; c.makeArray = function (t) { if (Array.isArray(t)) { return t } if (t === null || t === undefined) { return [] } var e = typeof t == "object" && typeof t.length == "number"; if (e) { return i.call(t) } return [t] }; c.removeFrom = function (t, e) { var i = t.indexOf(e); if (i != -1) { t.splice(i, 1) } }; c.getParent = function (t, e) { while (t.parentNode && t != document.body) { t = t.parentNode; if (r(t, e)) { return t } } }; c.getQueryElement = function (t) { if (typeof t == "string") { return document.querySelector(t) } return t }; c.handleEvent = function (t) { var e = "on" + t.type; if (this[e]) { this[e](t) } }; c.filterFindElements = function (t, n) { t = c.makeArray(t); var s = []; t.forEach(function (t) { if (!(t instanceof HTMLElement)) { return } if (!n) { s.push(t); return } if (r(t, n)) { s.push(t) } var e = t.querySelectorAll(n); for (var i = 0; i < e.length; i++) { s.push(e[i]) } }); return s }; c.debounceMethod = function (t, e, n) { n = n || 100; var s = t.prototype[e]; var r = e + "Timeout"; t.prototype[e] = function () { var t = this[r]; clearTimeout(t); var e = arguments; var i = this; this[r] = setTimeout(function () { s.apply(i, e); delete i[r] }, n) } }; c.docReady = function (t) { var e = document.readyState; if (e == "complete" || e == "interactive") { setTimeout(t) } else { document.addEventListener("DOMContentLoaded", t) } }; c.toDashed = function (t) { return t.replace(/(.)([A-Z])/g, function (t, e, i) { return e + "-" + i }).toLowerCase() }; var u = h.console; c.htmlInit = function (a, l) { c.docReady(function () { var t = c.toDashed(l); var s = "data-" + t; var e = document.querySelectorAll("[" + s + "]"); var i = document.querySelectorAll(".js-" + t); var n = c.makeArray(e).concat(c.makeArray(i)); var r = s + "-options"; var o = h.jQuery; n.forEach(function (e) { var t = e.getAttribute(s) || e.getAttribute(r); var i; try { i = t && JSON.parse(t) } catch (t) { if (u) { u.error("Error parsing " + s + " on " + e.className + ": " + t) } return } var n = new a(e, i); if (o) { o.data(e, l, n) } }) }) }; return c }); (function (e, i) { if (typeof define == "function" && define.amd) { define("flickity/js/cell", ["get-size/get-size"], function (t) { return i(e, t) }) } else if (typeof module == "object" && module.exports) { module.exports = i(e, require("get-size")) } else { e.Flickity = e.Flickity || {}; e.Flickity.Cell = i(e, e.getSize) } })(window, function t(e, i) { function n(t, e) { this.element = t; this.parent = e; this.create() } var s = n.prototype; s.create = function () { this.element.style.position = "absolute"; this.element.setAttribute("aria-hidden", "true"); this.x = 0; this.shift = 0; this.element.style[this.parent.originSide] = 0 }; s.destroy = function () { this.unselect(); this.element.style.position = ""; var t = this.parent.originSide; this.element.style[t] = ""; this.element.style.transform = ""; this.element.removeAttribute("aria-hidden") }; s.getSize = function () { this.size = i(this.element) }; s.setPosition = function (t) { this.x = t; this.updateTarget(); this.renderPosition(t) }; s.updateTarget = s.setDefaultTarget = function () { var t = this.parent.originSide == "left" ? "marginLeft" : "marginRight"; this.target = this.x + this.size[t] + this.size.width * this.parent.cellAlign }; s.renderPosition = function (t) { var e = this.parent.originSide === "left" ? 1 : -1; var i = this.parent.options.percentPosition ? t * e * (this.parent.size.innerWidth / this.size.width) : t * e; this.element.style.transform = "translateX(" + this.parent.getPositionValue(i) + ")" }; s.select = function () { this.element.classList.add("is-selected"); this.element.removeAttribute("aria-hidden") }; s.unselect = function () { this.element.classList.remove("is-selected"); this.element.setAttribute("aria-hidden", "true") }; s.wrapShift = function (t) { this.shift = t; this.renderPosition(this.x + this.parent.slideableWidth * t) }; s.remove = function () { this.element.parentNode.removeChild(this.element) }; return n }); (function (t, e) { if (typeof define == "function" && define.amd) { define("flickity/js/slide", e) } else if (typeof module == "object" && module.exports) { module.exports = e() } else { t.Flickity = t.Flickity || {}; t.Flickity.Slide = e() } })(window, function t() { "use strict"; function e(t) { this.parent = t; this.isOriginLeft = t.originSide == "left"; this.cells = []; this.outerWidth = 0; this.height = 0 } var i = e.prototype; i.addCell = function (t) { this.cells.push(t); this.outerWidth += t.size.outerWidth; this.height = Math.max(t.size.outerHeight, this.height); if (this.cells.length == 1) { this.x = t.x; var e = this.isOriginLeft ? "marginLeft" : "marginRight"; this.firstMargin = t.size[e] } }; i.updateTarget = function () { var t = this.isOriginLeft ? "marginRight" : "marginLeft"; var e = this.getLastCell(); var i = e ? e.size[t] : 0; var n = this.outerWidth - (this.firstMargin + i); this.target = this.x + this.firstMargin + n * this.parent.cellAlign }; i.getLastCell = function () { return this.cells[this.cells.length - 1] }; i.select = function () { this.cells.forEach(function (t) { t.select() }) }; i.unselect = function () { this.cells.forEach(function (t) { t.unselect() }) }; i.getCellElements = function () { return this.cells.map(function (t) { return t.element }) }; return e }); (function (e, i) { if (typeof define == "function" && define.amd) { define("flickity/js/animate", ["fizzy-ui-utils/utils"], function (t) { return i(e, t) }) } else if (typeof module == "object" && module.exports) { module.exports = i(e, require("fizzy-ui-utils")) } else { e.Flickity = e.Flickity || {}; e.Flickity.animatePrototype = i(e, e.fizzyUIUtils) } })(window, function t(e, i) { var n = {}; n.startAnimation = function () { if (this.isAnimating) { return } this.isAnimating = true; this.restingFrames = 0; this.animate() }; n.animate = function () { this.applyDragForce(); this.applySelectedAttraction(); var t = this.x; this.integratePhysics(); this.positionSlider(); this.settle(t); if (this.isAnimating) { var e = this; requestAnimationFrame(function t() { e.animate() }) } }; n.positionSlider = function () { var t = this.x; if (this.options.wrapAround && this.cells.length > 1) { t = i.modulo(t, this.slideableWidth); t -= this.slideableWidth; this.shiftWrapCells(t) } this.setTranslateX(t, this.isAnimating); this.dispatchScrollEvent() }; n.setTranslateX = function (t, e) { t += this.cursorPosition; t = this.options.rightToLeft ? -t : t; var i = this.getPositionValue(t); this.slider.style.transform = e ? "translate3d(" + i + ",0,0)" : "translateX(" + i + ")" }; n.dispatchScrollEvent = function () { var t = this.slides[0]; if (!t) { return } var e = -this.x - t.target; var i = e / this.slidesWidth; this.dispatchEvent("scroll", null, [i, e]) }; n.positionSliderAtSelected = function () { if (!this.cells.length) { return } this.x = -this.selectedSlide.target; this.velocity = 0; this.positionSlider() }; n.getPositionValue = function (t) { if (this.options.percentPosition) { return Math.round(t / this.size.innerWidth * 1e4) * .01 + "%" } else { return Math.round(t) + "px" } }; n.settle = function (t) { var e = !this.isPointerDown && Math.round(this.x * 100) == Math.round(t * 100); if (e) { this.restingFrames++ } if (this.restingFrames > 2) { this.isAnimating = false; delete this.isFreeScrolling; this.positionSlider(); this.dispatchEvent("settle", null, [this.selectedIndex]) } }; n.shiftWrapCells = function (t) { var e = this.cursorPosition + t; this._shiftCells(this.beforeShiftCells, e, -1); var i = this.size.innerWidth - (t + this.slideableWidth + this.cursorPosition); this._shiftCells(this.afterShiftCells, i, 1) }; n._shiftCells = function (t, e, i) { for (var n = 0; n < t.length; n++) { var s = t[n]; var r = e > 0 ? i : 0; s.wrapShift(r); e -= s.size.outerWidth } }; n._unshiftCells = function (t) { if (!t || !t.length) { return } for (var e = 0; e < t.length; e++) { t[e].wrapShift(0) } }; n.integratePhysics = function () { this.x += this.velocity; this.velocity *= this.getFrictionFactor() }; n.applyForce = function (t) { this.velocity += t }; n.getFrictionFactor = function () { return 1 - this.options[this.isFreeScrolling ? "freeScrollFriction" : "friction"] }; n.getRestingPosition = function () { return this.x + this.velocity / (1 - this.getFrictionFactor()) }; n.applyDragForce = function () { if (!this.isDraggable || !this.isPointerDown) { return } var t = this.dragX - this.x; var e = t - this.velocity; this.applyForce(e) }; n.applySelectedAttraction = function () { var t = this.isDraggable && this.isPointerDown; if (t || this.isFreeScrolling || !this.slides.length) { return } var e = this.selectedSlide.target * -1 - this.x; var i = e * this.options.selectedAttraction; this.applyForce(i) }; return n }); (function (o, a) { if (typeof define == "function" && define.amd) { define("flickity/js/flickity", ["ev-emitter/ev-emitter", "get-size/get-size", "fizzy-ui-utils/utils", "./cell", "./slide", "./animate"], function (t, e, i, n, s, r) { return a(o, t, e, i, n, s, r) }) } else if (typeof module == "object" && module.exports) { module.exports = a(o, require("ev-emitter"), require("get-size"), require("fizzy-ui-utils"), require("./cell"), require("./slide"), require("./animate")) } else { var t = o.Flickity; o.Flickity = a(o, o.EvEmitter, o.getSize, o.fizzyUIUtils, t.Cell, t.Slide, t.animatePrototype) } })(window, function t(n, e, i, a, s, o, r) { var l = n.jQuery; var h = n.getComputedStyle; var c = n.console; function u(t, e) { t = a.makeArray(t); while (t.length) { e.appendChild(t.shift()) } } var d = 0; var f = {}; function p(t, e) { var i = a.getQueryElement(t); if (!i) { if (c) { c.error("Bad element for Flickity: " + (i || t)) } return } this.element = i; if (this.element.flickityGUID) { var n = f[this.element.flickityGUID]; if (n) n.option(e); return n } if (l) { this.$element = l(this.element) } this.options = a.extend({}, this.constructor.defaults); this.option(e); this._create() } p.defaults = { accessibility: true, cellAlign: "center", freeScrollFriction: .075, friction: .28, namespaceJQueryEvents: true, percentPosition: true, resize: true, selectedAttraction: .025, setGallerySize: true }; p.createMethods = []; var v = p.prototype; a.extend(v, e.prototype); v._create = function () { var t = this.guid = ++d; this.element.flickityGUID = t; f[t] = this; this.selectedIndex = 0; this.restingFrames = 0; this.x = 0; this.velocity = 0; this.originSide = this.options.rightToLeft ? "right" : "left"; this.viewport = document.createElement("div"); this.viewport.className = "flickity-viewport"; this._createSlider(); if (this.options.resize || this.options.watchCSS) { n.addEventListener("resize", this) } for (var e in this.options.on) { var i = this.options.on[e]; this.on(e, i) } p.createMethods.forEach(function (t) { this[t]() }, this); if (this.options.watchCSS) { this.watchCSS() } else { this.activate() } }; v.option = function (t) { a.extend(this.options, t) }; v.activate = function () { if (this.isActive) { return } this.isActive = true; this.element.classList.add("flickity-enabled"); if (this.options.rightToLeft) { this.element.classList.add("flickity-rtl") } this.getSize(); var t = this._filterFindCellElements(this.element.children); u(t, this.slider); this.viewport.appendChild(this.slider); this.element.appendChild(this.viewport); this.reloadCells(); if (this.options.accessibility) { this.element.tabIndex = 0; this.element.addEventListener("keydown", this) } this.emitEvent("activate"); this.selectInitialIndex(); this.isInitActivated = true; this.dispatchEvent("ready") }; v._createSlider = function () { var t = document.createElement("div"); t.className = "flickity-slider"; t.style[this.originSide] = 0; this.slider = t }; v._filterFindCellElements = function (t) { return a.filterFindElements(t, this.options.cellSelector) }; v.reloadCells = function () { this.cells = this._makeCells(this.slider.children); this.positionCells(); this._getWrapShiftCells(); this.setGallerySize() }; v._makeCells = function (t) { var e = this._filterFindCellElements(t); var i = e.map(function (t) { return new s(t, this) }, this); return i }; v.getLastCell = function () { return this.cells[this.cells.length - 1] }; v.getLastSlide = function () { return this.slides[this.slides.length - 1] }; v.positionCells = function () { this._sizeCells(this.cells); this._positionCells(0) }; v._positionCells = function (t) { t = t || 0; this.maxCellHeight = t ? this.maxCellHeight || 0 : 0; var e = 0; if (t > 0) { var i = this.cells[t - 1]; e = i.x + i.size.outerWidth } var n = this.cells.length; for (var s = t; s < n; s++) { var r = this.cells[s]; r.setPosition(e); e += r.size.outerWidth; this.maxCellHeight = Math.max(r.size.outerHeight, this.maxCellHeight) } this.slideableWidth = e; this.updateSlides(); this._containSlides(); this.slidesWidth = n ? this.getLastSlide().target - this.slides[0].target : 0 }; v._sizeCells = function (t) { t.forEach(function (t) { t.getSize() }) }; v.updateSlides = function () { this.slides = []; if (!this.cells.length) { return } var n = new o(this); this.slides.push(n); var t = this.originSide == "left"; var s = t ? "marginRight" : "marginLeft"; var r = this._getCanCellFit(); this.cells.forEach(function (t, e) { if (!n.cells.length) { n.addCell(t); return } var i = n.outerWidth - n.firstMargin + (t.size.outerWidth - t.size[s]); if (r.call(this, e, i)) { n.addCell(t) } else { n.updateTarget(); n = new o(this); this.slides.push(n); n.addCell(t) } }, this); n.updateTarget(); this.updateSelectedSlide() }; v._getCanCellFit = function () { var t = this.options.groupCells; if (!t) { return function () { return false } } else if (typeof t == "number") { var e = parseInt(t, 10); return function (t) { return t % e !== 0 } } var i = typeof t == "string" && t.match(/^(\d+)%$/); var n = i ? parseInt(i[1], 10) / 100 : 1; return function (t, e) { return e <= (this.size.innerWidth + 1) * n } }; v._init = v.reposition = function () { this.positionCells(); this.positionSliderAtSelected() }; v.getSize = function () { this.size = i(this.element); this.setCellAlign(); this.cursorPosition = this.size.innerWidth * this.cellAlign }; var g = { center: { left: .5, right: .5 }, left: { left: 0, right: 1 }, right: { right: 0, left: 1 } }; v.setCellAlign = function () { var t = g[this.options.cellAlign]; this.cellAlign = t ? t[this.originSide] : this.options.cellAlign }; v.setGallerySize = function () { if (this.options.setGallerySize) { var t = this.options.adaptiveHeight && this.selectedSlide ? this.selectedSlide.height : this.maxCellHeight; this.viewport.style.height = t + "px" } }; v._getWrapShiftCells = function () { if (!this.options.wrapAround) { return } this._unshiftCells(this.beforeShiftCells); this._unshiftCells(this.afterShiftCells); var t = this.cursorPosition; var e = this.cells.length - 1; this.beforeShiftCells = this._getGapCells(t, e, -1); t = this.size.innerWidth - this.cursorPosition; this.afterShiftCells = this._getGapCells(t, 0, 1) }; v._getGapCells = function (t, e, i) { var n = []; while (t > 0) { var s = this.cells[e]; if (!s) { break } n.push(s); e += i; t -= s.size.outerWidth } return n }; v._containSlides = function () { if (!this.options.contain || this.options.wrapAround || !this.cells.length) { return } var t = this.options.rightToLeft; var e = t ? "marginRight" : "marginLeft"; var i = t ? "marginLeft" : "marginRight"; var n = this.slideableWidth - this.getLastCell().size[i]; var s = n < this.size.innerWidth; var r = this.cursorPosition + this.cells[0].size[e]; var o = n - this.size.innerWidth * (1 - this.cellAlign); this.slides.forEach(function (t) { if (s) { t.target = n * this.cellAlign } else { t.target = Math.max(t.target, r); t.target = Math.min(t.target, o) } }, this) }; v.dispatchEvent = function (t, e, i) { var n = e ? [e].concat(i) : i; this.emitEvent(t, n); if (l && this.$element) { t += this.options.namespaceJQueryEvents ? ".flickity" : ""; var s = t; if (e) { var r = new l.Event(e); r.type = t; s = r } this.$element.trigger(s, i) } }; v.select = function (t, e, i) { if (!this.isActive) { return } t = parseInt(t, 10); this._wrapSelect(t); if (this.options.wrapAround || e) { t = a.modulo(t, this.slides.length) } if (!this.slides[t]) { return } var n = this.selectedIndex; this.selectedIndex = t; this.updateSelectedSlide(); if (i) { this.positionSliderAtSelected() } else { this.startAnimation() } if (this.options.adaptiveHeight) { this.setGallerySize() } this.dispatchEvent("select", null, [t]); if (t != n) { this.dispatchEvent("change", null, [t]) } this.dispatchEvent("cellSelect") }; v._wrapSelect = function (t) { var e = this.slides.length; var i = this.options.wrapAround && e > 1; if (!i) { return t } var n = a.modulo(t, e); var s = Math.abs(n - this.selectedIndex); var r = Math.abs(n + e - this.selectedIndex); var o = Math.abs(n - e - this.selectedIndex); if (!this.isDragSelect && r < s) { t += e } else if (!this.isDragSelect && o < s) { t -= e } if (t < 0) { this.x -= this.slideableWidth } else if (t >= e) { this.x += this.slideableWidth } }; v.previous = function (t, e) { this.select(this.selectedIndex - 1, t, e) }; v.next = function (t, e) { this.select(this.selectedIndex + 1, t, e) }; v.updateSelectedSlide = function () { var t = this.slides[this.selectedIndex]; if (!t) { return } this.unselectSelectedSlide(); this.selectedSlide = t; t.select(); this.selectedCells = t.cells; this.selectedElements = t.getCellElements(); this.selectedCell = t.cells[0]; this.selectedElement = this.selectedElements[0] }; v.unselectSelectedSlide = function () { if (this.selectedSlide) { this.selectedSlide.unselect() } }; v.selectInitialIndex = function () { var t = this.options.initialIndex; if (this.isInitActivated) { this.select(this.selectedIndex, false, true); return } if (t && typeof t == "string") { var e = this.queryCell(t); if (e) { this.selectCell(t, false, true); return } } var i = 0; if (t && this.slides[t]) { i = t } this.select(i, false, true) }; v.selectCell = function (t, e, i) { var n = this.queryCell(t); if (!n) { return } var s = this.getCellSlideIndex(n); this.select(s, e, i) }; v.getCellSlideIndex = function (t) { for (var e = 0; e < this.slides.length; e++) { var i = this.slides[e]; var n = i.cells.indexOf(t); if (n != -1) { return e } } }; v.getCell = function (t) { for (var e = 0; e < this.cells.length; e++) { var i = this.cells[e]; if (i.element == t) { return i } } }; v.getCells = function (t) { t = a.makeArray(t); var i = []; t.forEach(function (t) { var e = this.getCell(t); if (e) { i.push(e) } }, this); return i }; v.getCellElements = function () { return this.cells.map(function (t) { return t.element }) }; v.getParentCell = function (t) { var e = this.getCell(t); if (e) { return e } t = a.getParent(t, ".flickity-slider > *"); return this.getCell(t) }; v.getAdjacentCellElements = function (t, e) { if (!t) { return this.selectedSlide.getCellElements() } e = e === undefined ? this.selectedIndex : e; var i = this.slides.length; if (1 + t * 2 >= i) { return this.getCellElements() } var n = []; for (var s = e - t; s <= e + t; s++) { var r = this.options.wrapAround ? a.modulo(s, i) : s; var o = this.slides[r]; if (o) { n = n.concat(o.getCellElements()) } } return n }; v.queryCell = function (t) { if (typeof t == "number") { return this.cells[t] } if (typeof t == "string") { if (t.match(/^[#.]?[\d/]/)) { return } t = this.element.querySelector(t) } return this.getCell(t) }; v.uiChange = function () { this.emitEvent("uiChange") }; v.childUIPointerDown = function (t) { if (t.type != "touchstart") { t.preventDefault() } this.focus() }; v.onresize = function () { this.watchCSS(); this.resize() }; a.debounceMethod(p, "onresize", 150); v.resize = function () { if (!this.isActive || this.isAnimating || this.isDragging) { return } this.getSize(); if (this.options.wrapAround) { this.x = a.modulo(this.x, this.slideableWidth) } this.positionCells(); this._getWrapShiftCells(); this.setGallerySize(); this.emitEvent("resize"); var t = this.selectedElements && this.selectedElements[0]; this.selectCell(t, false, true) }; v.watchCSS = function () { var t = this.options.watchCSS; if (!t) { return } var e = h(this.element, ":after").content; if (e.indexOf("flickity") != -1) { this.activate() } else { this.deactivate() } }; v.onkeydown = function (t) { var e = document.activeElement && document.activeElement != this.element; if (!this.options.accessibility || e) { return } var i = p.keyboardHandlers[t.keyCode]; if (i) { i.call(this) } }; p.keyboardHandlers = { 37: function () { var t = this.options.rightToLeft ? "next" : "previous"; this.uiChange(); this[t]() }, 39: function () { var t = this.options.rightToLeft ? "previous" : "next"; this.uiChange(); this[t]() } }; v.focus = function () { var t = n.pageYOffset; this.element.focus({ preventScroll: true }); if (n.pageYOffset != t) { n.scrollTo(n.pageXOffset, t) } }; v.deactivate = function () { if (!this.isActive) { return } this.element.classList.remove("flickity-enabled"); this.element.classList.remove("flickity-rtl"); this.unselectSelectedSlide(); this.cells.forEach(function (t) { t.destroy() }); this.element.removeChild(this.viewport); u(this.slider.children, this.element); if (this.options.accessibility) { this.element.removeAttribute("tabIndex"); this.element.removeEventListener("keydown", this) } this.isActive = false; this.emitEvent("deactivate") }; v.destroy = function () { this.deactivate(); n.removeEventListener("resize", this); this.allOff(); this.emitEvent("destroy"); if (l && this.$element) { l.removeData(this.element, "flickity") } delete this.element.flickityGUID; delete f[this.guid] }; a.extend(v, r); p.data = function (t) { t = a.getQueryElement(t); var e = t && t.flickityGUID; return e && f[e] }; a.htmlInit(p, "flickity"); if (l && l.bridget) { l.bridget("flickity", p) } p.setJQuery = function (t) { l = t }; p.Cell = s; p.Slide = o; return p });
/*!
 * Unipointer v2.4.0
 * base class for doing one thing with pointer event
 * MIT license
 */
(function (e, i) { if (typeof define == "function" && define.amd) { define("unipointer/unipointer", ["ev-emitter/ev-emitter"], function (t) { return i(e, t) }) } else if (typeof module == "object" && module.exports) { module.exports = i(e, require("ev-emitter")) } else { e.Unipointer = i(e, e.EvEmitter) } })(window, function t(s, e) { function i() { } function n() { } var r = n.prototype = Object.create(e.prototype); r.bindStartEvent = function (t) { this._bindStartEvent(t, true) }; r.unbindStartEvent = function (t) { this._bindStartEvent(t, false) }; r._bindStartEvent = function (t, e) { e = e === undefined ? true : e; var i = e ? "addEventListener" : "removeEventListener"; var n = "mousedown"; if ("ontouchstart" in s) { n = "touchstart" } else if (s.PointerEvent) { n = "pointerdown" } t[i](n, this) }; r.handleEvent = function (t) { var e = "on" + t.type; if (this[e]) { this[e](t) } }; r.getTouch = function (t) { for (var e = 0; e < t.length; e++) { var i = t[e]; if (i.identifier == this.pointerIdentifier) { return i } } }; r.onmousedown = function (t) { var e = t.button; if (e && (e !== 0 && e !== 1)) { return } this._pointerDown(t, t) }; r.ontouchstart = function (t) { this._pointerDown(t, t.changedTouches[0]) }; r.onpointerdown = function (t) { this._pointerDown(t, t) }; r._pointerDown = function (t, e) { if (t.button || this.isPointerDown) { return } this.isPointerDown = true; this.pointerIdentifier = e.pointerId !== undefined ? e.pointerId : e.identifier; this.pointerDown(t, e) }; r.pointerDown = function (t, e) { this._bindPostStartEvents(t); this.emitEvent("pointerDown", [t, e]) }; var o = { mousedown: ["mousemove", "mouseup"], touchstart: ["touchmove", "touchend", "touchcancel"], pointerdown: ["pointermove", "pointerup", "pointercancel"] }; r._bindPostStartEvents = function (t) { if (!t) { return } var e = o[t.type]; e.forEach(function (t) { s.addEventListener(t, this) }, this); this._boundPointerEvents = e }; r._unbindPostStartEvents = function () { if (!this._boundPointerEvents) { return } this._boundPointerEvents.forEach(function (t) { s.removeEventListener(t, this) }, this); delete this._boundPointerEvents }; r.onmousemove = function (t) { this._pointerMove(t, t) }; r.onpointermove = function (t) { if (t.pointerId == this.pointerIdentifier) { this._pointerMove(t, t) } }; r.ontouchmove = function (t) { var e = this.getTouch(t.changedTouches); if (e) { this._pointerMove(t, e) } }; r._pointerMove = function (t, e) { this.pointerMove(t, e) }; r.pointerMove = function (t, e) { this.emitEvent("pointerMove", [t, e]) }; r.onmouseup = function (t) { this._pointerUp(t, t) }; r.onpointerup = function (t) { if (t.pointerId == this.pointerIdentifier) { this._pointerUp(t, t) } }; r.ontouchend = function (t) { var e = this.getTouch(t.changedTouches); if (e) { this._pointerUp(t, e) } }; r._pointerUp = function (t, e) { this._pointerDone(); this.pointerUp(t, e) }; r.pointerUp = function (t, e) { this.emitEvent("pointerUp", [t, e]) }; r._pointerDone = function () { this._pointerReset(); this._unbindPostStartEvents(); this.pointerDone() }; r._pointerReset = function () { this.isPointerDown = false; delete this.pointerIdentifier }; r.pointerDone = i; r.onpointercancel = function (t) { if (t.pointerId == this.pointerIdentifier) { this._pointerCancel(t, t) } }; r.ontouchcancel = function (t) { var e = this.getTouch(t.changedTouches); if (e) { this._pointerCancel(t, e) } }; r._pointerCancel = function (t, e) { this._pointerDone(); this.pointerCancel(t, e) }; r.pointerCancel = function (t, e) { this.emitEvent("pointerCancel", [t, e]) }; n.getPointerPoint = function (t) { return { x: t.pageX, y: t.pageY } }; return n });
/*!
 * Unidragger v2.4.0
 * Draggable base class
 * MIT license
 */
(function (e, i) { if (typeof define == "function" && define.amd) { define("unidragger/unidragger", ["unipointer/unipointer"], function (t) { return i(e, t) }) } else if (typeof module == "object" && module.exports) { module.exports = i(e, require("unipointer")) } else { e.Unidragger = i(e, e.Unipointer) } })(window, function t(r, e) { function i() { } var n = i.prototype = Object.create(e.prototype); n.bindHandles = function () { this._bindHandles(true) }; n.unbindHandles = function () { this._bindHandles(false) }; n._bindHandles = function (t) { t = t === undefined ? true : t; var e = t ? "addEventListener" : "removeEventListener"; var i = t ? this._touchActionValue : ""; for (var n = 0; n < this.handles.length; n++) { var s = this.handles[n]; this._bindStartEvent(s, t); s[e]("click", this); if (r.PointerEvent) { s.style.touchAction = i } } }; n._touchActionValue = "none"; n.pointerDown = function (t, e) { var i = this.okayPointerDown(t); if (!i) { return } this.pointerDownPointer = { pageX: e.pageX, pageY: e.pageY }; t.preventDefault(); this.pointerDownBlur(); this._bindPostStartEvents(t); this.emitEvent("pointerDown", [t, e]) }; var s = { TEXTAREA: true, INPUT: true, SELECT: true, OPTION: true }; var o = { radio: true, checkbox: true, button: true, submit: true, image: true, file: true }; n.okayPointerDown = function (t) { var e = s[t.target.nodeName]; var i = o[t.target.type]; var n = !e || i; if (!n) { this._pointerReset() } return n }; n.pointerDownBlur = function () { var t = document.activeElement; var e = t && t.blur && t != document.body; if (e) { t.blur() } }; n.pointerMove = function (t, e) { var i = this._dragPointerMove(t, e); this.emitEvent("pointerMove", [t, e, i]); this._dragMove(t, e, i) }; n._dragPointerMove = function (t, e) { var i = { x: e.pageX - this.pointerDownPointer.pageX, y: e.pageY - this.pointerDownPointer.pageY }; if (!this.isDragging && this.hasDragStarted(i)) { this._dragStart(t, e) } return i }; n.hasDragStarted = function (t) { return Math.abs(t.x) > 3 || Math.abs(t.y) > 3 }; n.pointerUp = function (t, e) { this.emitEvent("pointerUp", [t, e]); this._dragPointerUp(t, e) }; n._dragPointerUp = function (t, e) { if (this.isDragging) { this._dragEnd(t, e) } else { this._staticClick(t, e) } }; n._dragStart = function (t, e) { this.isDragging = true; this.isPreventingClicks = true; this.dragStart(t, e) }; n.dragStart = function (t, e) { this.emitEvent("dragStart", [t, e]) }; n._dragMove = function (t, e, i) { if (!this.isDragging) { return } this.dragMove(t, e, i) }; n.dragMove = function (t, e, i) { t.preventDefault(); this.emitEvent("dragMove", [t, e, i]) }; n._dragEnd = function (t, e) { this.isDragging = false; setTimeout(function () { delete this.isPreventingClicks }.bind(this)); this.dragEnd(t, e) }; n.dragEnd = function (t, e) { this.emitEvent("dragEnd", [t, e]) }; n.onclick = function (t) { if (this.isPreventingClicks) { t.preventDefault() } }; n._staticClick = function (t, e) { if (this.isIgnoringMouseUp && t.type == "mouseup") { return } this.staticClick(t, e); if (t.type != "mouseup") { this.isIgnoringMouseUp = true; setTimeout(function () { delete this.isIgnoringMouseUp }.bind(this), 400) } }; n.staticClick = function (t, e) { this.emitEvent("staticClick", [t, e]) }; i.getPointerPoint = e.getPointerPoint; return i }); (function (n, s) { if (typeof define == "function" && define.amd) { define("flickity/js/drag", ["./flickity", "unidragger/unidragger", "fizzy-ui-utils/utils"], function (t, e, i) { return s(n, t, e, i) }) } else if (typeof module == "object" && module.exports) { module.exports = s(n, require("./flickity"), require("unidragger"), require("fizzy-ui-utils")) } else { n.Flickity = s(n, n.Flickity, n.Unidragger, n.fizzyUIUtils) } })(window, function t(n, e, i, a) { a.extend(e.defaults, { draggable: ">1", dragThreshold: 3 }); e.createMethods.push("_createDrag"); var s = e.prototype; a.extend(s, i.prototype); s._touchActionValue = "pan-y"; s._createDrag = function () { this.on("activate", this.onActivateDrag); this.on("uiChange", this._uiChangeDrag); this.on("deactivate", this.onDeactivateDrag); this.on("cellChange", this.updateDraggable) }; s.onActivateDrag = function () { this.handles = [this.viewport]; this.bindHandles(); this.updateDraggable() }; s.onDeactivateDrag = function () { this.unbindHandles(); this.element.classList.remove("is-draggable") }; s.updateDraggable = function () { if (this.options.draggable == ">1") { this.isDraggable = this.slides.length > 1 } else { this.isDraggable = this.options.draggable } if (this.isDraggable) { this.element.classList.add("is-draggable") } else { this.element.classList.remove("is-draggable") } }; s.bindDrag = function () { this.options.draggable = true; this.updateDraggable() }; s.unbindDrag = function () { this.options.draggable = false; this.updateDraggable() }; s._uiChangeDrag = function () { delete this.isFreeScrolling }; s.pointerDown = function (t, e) { if (!this.isDraggable) { this._pointerDownDefault(t, e); return } var i = this.okayPointerDown(t); if (!i) { return } this._pointerDownPreventDefault(t); this.pointerDownFocus(t); if (document.activeElement != this.element) { this.pointerDownBlur() } this.dragX = this.x; this.viewport.classList.add("is-pointer-down"); this.pointerDownScroll = o(); n.addEventListener("scroll", this); this._pointerDownDefault(t, e) }; s._pointerDownDefault = function (t, e) { this.pointerDownPointer = { pageX: e.pageX, pageY: e.pageY }; this._bindPostStartEvents(t); this.dispatchEvent("pointerDown", t, [e]) }; var r = { INPUT: true, TEXTAREA: true, SELECT: true }; s.pointerDownFocus = function (t) { var e = r[t.target.nodeName]; if (!e) { this.focus() } }; s._pointerDownPreventDefault = function (t) { var e = t.type == "touchstart"; var i = t.pointerType == "touch"; var n = r[t.target.nodeName]; if (!e && !i && !n) { t.preventDefault() } }; s.hasDragStarted = function (t) { return Math.abs(t.x) > this.options.dragThreshold }; s.pointerUp = function (t, e) { delete this.isTouchScrolling; this.viewport.classList.remove("is-pointer-down"); this.dispatchEvent("pointerUp", t, [e]); this._dragPointerUp(t, e) }; s.pointerDone = function () { n.removeEventListener("scroll", this); delete this.pointerDownScroll }; s.dragStart = function (t, e) { if (!this.isDraggable) { return } this.dragStartPosition = this.x; this.startAnimation(); n.removeEventListener("scroll", this); this.dispatchEvent("dragStart", t, [e]) }; s.pointerMove = function (t, e) { var i = this._dragPointerMove(t, e); this.dispatchEvent("pointerMove", t, [e, i]); this._dragMove(t, e, i) }; s.dragMove = function (t, e, i) { if (!this.isDraggable) { return } t.preventDefault(); this.previousDragX = this.dragX; var n = this.options.rightToLeft ? -1 : 1; if (this.options.wrapAround) { i.x %= this.slideableWidth } var s = this.dragStartPosition + i.x * n; if (!this.options.wrapAround && this.slides.length) { var r = Math.max(-this.slides[0].target, this.dragStartPosition); s = s > r ? (s + r) * .5 : s; var o = Math.min(-this.getLastSlide().target, this.dragStartPosition); s = s < o ? (s + o) * .5 : s } this.dragX = s; this.dragMoveTime = new Date; this.dispatchEvent("dragMove", t, [e, i]) }; s.dragEnd = function (t, e) { if (!this.isDraggable) { return } if (this.options.freeScroll) { this.isFreeScrolling = true } var i = this.dragEndRestingSelect(); if (this.options.freeScroll && !this.options.wrapAround) { var n = this.getRestingPosition(); this.isFreeScrolling = -n > this.slides[0].target && -n < this.getLastSlide().target } else if (!this.options.freeScroll && i == this.selectedIndex) { i += this.dragEndBoostSelect() } delete this.previousDragX; this.isDragSelect = this.options.wrapAround; this.select(i); delete this.isDragSelect; this.dispatchEvent("dragEnd", t, [e]) }; s.dragEndRestingSelect = function () { var t = this.getRestingPosition(); var e = Math.abs(this.getSlideDistance(-t, this.selectedIndex)); var i = this._getClosestResting(t, e, 1); var n = this._getClosestResting(t, e, -1); var s = i.distance < n.distance ? i.index : n.index; return s }; s._getClosestResting = function (t, e, i) { var n = this.selectedIndex; var s = Infinity; var r = this.options.contain && !this.options.wrapAround ? function (t, e) { return t <= e } : function (t, e) { return t < e }; while (r(e, s)) { n += i; s = e; e = this.getSlideDistance(-t, n); if (e === null) { break } e = Math.abs(e) } return { distance: s, index: n - i } }; s.getSlideDistance = function (t, e) { var i = this.slides.length; var n = this.options.wrapAround && i > 1; var s = n ? a.modulo(e, i) : e; var r = this.slides[s]; if (!r) { return null } var o = n ? this.slideableWidth * Math.floor(e / i) : 0; return t - (r.target + o) }; s.dragEndBoostSelect = function () { if (this.previousDragX === undefined || !this.dragMoveTime || new Date - this.dragMoveTime > 100) { return 0 } var t = this.getSlideDistance(-this.dragX, this.selectedIndex); var e = this.previousDragX - this.dragX; if (t > 0 && e > 0) { return 1 } else if (t < 0 && e < 0) { return -1 } return 0 }; s.staticClick = function (t, e) { var i = this.getParentCell(t.target); var n = i && i.element; var s = i && this.cells.indexOf(i); this.dispatchEvent("staticClick", t, [e, n, s]) }; s.onscroll = function () { var t = o(); var e = this.pointerDownScroll.x - t.x; var i = this.pointerDownScroll.y - t.y; if (Math.abs(e) > 3 || Math.abs(i) > 3) { this._pointerDone() } }; function o() { return { x: n.pageXOffset, y: n.pageYOffset } } return e }); (function (n, s) { if (typeof define == "function" && define.amd) { define("flickity/js/prev-next-button", ["./flickity", "unipointer/unipointer", "fizzy-ui-utils/utils"], function (t, e, i) { return s(n, t, e, i) }) } else if (typeof module == "object" && module.exports) { module.exports = s(n, require("./flickity"), require("unipointer"), require("fizzy-ui-utils")) } else { s(n, n.Flickity, n.Unipointer, n.fizzyUIUtils) } })(window, function t(e, i, n, s) { "use strict"; var r = "http://www.w3.org/2000/svg"; function o(t, e) { this.direction = t; this.parent = e; this._create() } o.prototype = Object.create(n.prototype); o.prototype._create = function () { this.isEnabled = true; this.isPrevious = this.direction == -1; var t = this.parent.options.rightToLeft ? 1 : -1; this.isLeft = this.direction == t; var e = this.element = document.createElement("button"); e.className = "flickity-button flickity-prev-next-button"; e.className += this.isPrevious ? " previous" : " next"; e.setAttribute("type", "button"); this.disable(); e.setAttribute("aria-label", this.isPrevious ? "Previous" : "Next"); var i = this.createSVG(); e.appendChild(i); this.parent.on("select", this.update.bind(this)); this.on("pointerDown", this.parent.childUIPointerDown.bind(this.parent)) }; o.prototype.activate = function () { this.bindStartEvent(this.element); this.element.addEventListener("click", this); this.parent.element.appendChild(this.element) }; o.prototype.deactivate = function () { this.parent.element.removeChild(this.element); this.unbindStartEvent(this.element); this.element.removeEventListener("click", this) }; o.prototype.createSVG = function () { var t = document.createElementNS(r, "svg"); t.setAttribute("class", "flickity-button-icon"); t.setAttribute("viewBox", "0 0 100 100"); var e = document.createElementNS(r, "path"); var i = a(this.parent.options.arrowShape); e.setAttribute("d", i); e.setAttribute("class", "arrow"); if (!this.isLeft) { e.setAttribute("transform", "translate(100, 100) rotate(180) ") } t.appendChild(e); return t }; function a(t) { if (typeof t == "string") { return t } return "M " + t.x0 + ",50" + " L " + t.x1 + "," + (t.y1 + 50) + " L " + t.x2 + "," + (t.y2 + 50) + " L " + t.x3 + ",50 " + " L " + t.x2 + "," + (50 - t.y2) + " L " + t.x1 + "," + (50 - t.y1) + " Z" } o.prototype.handleEvent = s.handleEvent; o.prototype.onclick = function () { if (!this.isEnabled) { return } this.parent.uiChange(); var t = this.isPrevious ? "previous" : "next"; this.parent[t]() }; o.prototype.enable = function () { if (this.isEnabled) { return } this.element.disabled = false; this.isEnabled = true }; o.prototype.disable = function () { if (!this.isEnabled) { return } this.element.disabled = true; this.isEnabled = false }; o.prototype.update = function () { var t = this.parent.slides; if (this.parent.options.wrapAround && t.length > 1) { this.enable(); return } var e = t.length ? t.length - 1 : 0; var i = this.isPrevious ? 0 : e; var n = this.parent.selectedIndex == i ? "disable" : "enable"; this[n]() }; o.prototype.destroy = function () { this.deactivate(); this.allOff() }; s.extend(i.defaults, { prevNextButtons: true, arrowShape: { x0: 10, x1: 60, y1: 50, x2: 70, y2: 40, x3: 30 } }); i.createMethods.push("_createPrevNextButtons"); var l = i.prototype; l._createPrevNextButtons = function () { if (!this.options.prevNextButtons) { return } this.prevButton = new o(-1, this); this.nextButton = new o(1, this); this.on("activate", this.activatePrevNextButtons) }; l.activatePrevNextButtons = function () { this.prevButton.activate(); this.nextButton.activate(); this.on("deactivate", this.deactivatePrevNextButtons) }; l.deactivatePrevNextButtons = function () { this.prevButton.deactivate(); this.nextButton.deactivate(); this.off("deactivate", this.deactivatePrevNextButtons) }; i.PrevNextButton = o; return i }); (function (n, s) { if (typeof define == "function" && define.amd) { define("flickity/js/page-dots", ["./flickity", "unipointer/unipointer", "fizzy-ui-utils/utils"], function (t, e, i) { return s(n, t, e, i) }) } else if (typeof module == "object" && module.exports) { module.exports = s(n, require("./flickity"), require("unipointer"), require("fizzy-ui-utils")) } else { s(n, n.Flickity, n.Unipointer, n.fizzyUIUtils) } })(window, function t(e, i, n, s) { function r(t) { this.parent = t; this._create() } r.prototype = Object.create(n.prototype); r.prototype._create = function () { this.holder = document.createElement("ol"); this.holder.className = "flickity-page-dots"; this.dots = []; this.handleClick = this.onClick.bind(this); this.on("pointerDown", this.parent.childUIPointerDown.bind(this.parent)) }; r.prototype.activate = function () { this.setDots(); this.holder.addEventListener("click", this.handleClick); this.bindStartEvent(this.holder); this.parent.element.appendChild(this.holder) }; r.prototype.deactivate = function () { this.holder.removeEventListener("click", this.handleClick); this.unbindStartEvent(this.holder); this.parent.element.removeChild(this.holder) }; r.prototype.setDots = function () { var t = this.parent.slides.length - this.dots.length; if (t > 0) { this.addDots(t) } else if (t < 0) { this.removeDots(-t) } }; r.prototype.addDots = function (t) { var e = document.createDocumentFragment(); var i = []; var n = this.dots.length; var s = n + t; for (var r = n; r < s; r++) { var o = document.createElement("li"); o.className = "dot"; o.setAttribute("aria-label", "Page dot " + (r + 1)); e.appendChild(o); i.push(o) } this.holder.appendChild(e); this.dots = this.dots.concat(i) }; r.prototype.removeDots = function (t) { var e = this.dots.splice(this.dots.length - t, t); e.forEach(function (t) { this.holder.removeChild(t) }, this) }; r.prototype.updateSelected = function () { if (this.selectedDot) { this.selectedDot.className = "dot"; this.selectedDot.removeAttribute("aria-current") } if (!this.dots.length) { return } this.selectedDot = this.dots[this.parent.selectedIndex]; this.selectedDot.className = "dot is-selected"; this.selectedDot.setAttribute("aria-current", "step") }; r.prototype.onTap = r.prototype.onClick = function (t) { var e = t.target; if (e.nodeName != "LI") { return } this.parent.uiChange(); var i = this.dots.indexOf(e); this.parent.select(i) }; r.prototype.destroy = function () { this.deactivate(); this.allOff() }; i.PageDots = r; s.extend(i.defaults, { pageDots: true }); i.createMethods.push("_createPageDots"); var o = i.prototype; o._createPageDots = function () { if (!this.options.pageDots) { return } this.pageDots = new r(this); this.on("activate", this.activatePageDots); this.on("select", this.updateSelectedPageDots); this.on("cellChange", this.updatePageDots); this.on("resize", this.updatePageDots); this.on("deactivate", this.deactivatePageDots) }; o.activatePageDots = function () { this.pageDots.activate() }; o.updateSelectedPageDots = function () { this.pageDots.updateSelected() }; o.updatePageDots = function () { this.pageDots.setDots() }; o.deactivatePageDots = function () { this.pageDots.deactivate() }; i.PageDots = r; return i }); (function (t, n) { if (typeof define == "function" && define.amd) { define("flickity/js/player", ["ev-emitter/ev-emitter", "fizzy-ui-utils/utils", "./flickity"], function (t, e, i) { return n(t, e, i) }) } else if (typeof module == "object" && module.exports) { module.exports = n(require("ev-emitter"), require("fizzy-ui-utils"), require("./flickity")) } else { n(t.EvEmitter, t.fizzyUIUtils, t.Flickity) } })(window, function t(e, i, n) { function s(t) { this.parent = t; this.state = "stopped"; this.onVisibilityChange = this.visibilityChange.bind(this); this.onVisibilityPlay = this.visibilityPlay.bind(this) } s.prototype = Object.create(e.prototype); s.prototype.play = function () { if (this.state == "playing") { return } var t = document.hidden; if (t) { document.addEventListener("visibilitychange", this.onVisibilityPlay); return } this.state = "playing"; document.addEventListener("visibilitychange", this.onVisibilityChange); this.tick() }; s.prototype.tick = function () { if (this.state != "playing") { return } var t = this.parent.options.autoPlay; t = typeof t == "number" ? t : 3e3; var e = this; this.clear(); this.timeout = setTimeout(function () { e.parent.next(true); e.tick() }, t) }; s.prototype.stop = function () { this.state = "stopped"; this.clear(); document.removeEventListener("visibilitychange", this.onVisibilityChange) }; s.prototype.clear = function () { clearTimeout(this.timeout) }; s.prototype.pause = function () { if (this.state == "playing") { this.state = "paused"; this.clear() } }; s.prototype.unpause = function () { if (this.state == "paused") { this.play() } }; s.prototype.visibilityChange = function () { var t = document.hidden; this[t ? "pause" : "unpause"]() }; s.prototype.visibilityPlay = function () { this.play(); document.removeEventListener("visibilitychange", this.onVisibilityPlay) }; i.extend(n.defaults, { pauseAutoPlayOnHover: true }); n.createMethods.push("_createPlayer"); var r = n.prototype; r._createPlayer = function () { this.player = new s(this); this.on("activate", this.activatePlayer); this.on("uiChange", this.stopPlayer); this.on("pointerDown", this.stopPlayer); this.on("deactivate", this.deactivatePlayer) }; r.activatePlayer = function () { if (!this.options.autoPlay) { return } this.player.play(); this.element.addEventListener("mouseenter", this) }; r.playPlayer = function () { this.player.play() }; r.stopPlayer = function () { this.player.stop() }; r.pausePlayer = function () { this.player.pause() }; r.unpausePlayer = function () { this.player.unpause() }; r.deactivatePlayer = function () { this.player.stop(); this.element.removeEventListener("mouseenter", this) }; r.onmouseenter = function () { if (!this.options.pauseAutoPlayOnHover) { return } this.player.pause(); this.element.addEventListener("mouseleave", this) }; r.onmouseleave = function () { this.player.unpause(); this.element.removeEventListener("mouseleave", this) }; n.Player = s; return n }); (function (i, n) { if (typeof define == "function" && define.amd) { define("flickity/js/add-remove-cell", ["./flickity", "fizzy-ui-utils/utils"], function (t, e) { return n(i, t, e) }) } else if (typeof module == "object" && module.exports) { module.exports = n(i, require("./flickity"), require("fizzy-ui-utils")) } else { n(i, i.Flickity, i.fizzyUIUtils) } })(window, function t(e, i, n) { function l(t) { var e = document.createDocumentFragment(); t.forEach(function (t) { e.appendChild(t.element) }); return e } var s = i.prototype; s.insert = function (t, e) { var i = this._makeCells(t); if (!i || !i.length) { return } var n = this.cells.length; e = e === undefined ? n : e; var s = l(i); var r = e == n; if (r) { this.slider.appendChild(s) } else { var o = this.cells[e].element; this.slider.insertBefore(s, o) } if (e === 0) { this.cells = i.concat(this.cells) } else if (r) { this.cells = this.cells.concat(i) } else { var a = this.cells.splice(e, n - e); this.cells = this.cells.concat(i).concat(a) } this._sizeCells(i); this.cellChange(e, true) }; s.append = function (t) { this.insert(t, this.cells.length) }; s.prepend = function (t) { this.insert(t, 0) }; s.remove = function (t) { var e = this.getCells(t); if (!e || !e.length) { return } var i = this.cells.length - 1; e.forEach(function (t) { t.remove(); var e = this.cells.indexOf(t); i = Math.min(e, i); n.removeFrom(this.cells, t) }, this); this.cellChange(i, true) }; s.cellSizeChange = function (t) { var e = this.getCell(t); if (!e) { return } e.getSize(); var i = this.cells.indexOf(e); this.cellChange(i) }; s.cellChange = function (t, e) { var i = this.selectedElement; this._positionCells(t); this._getWrapShiftCells(); this.setGallerySize(); var n = this.getCell(i); if (n) { this.selectedIndex = this.getCellSlideIndex(n) } this.selectedIndex = Math.min(this.slides.length - 1, this.selectedIndex); this.emitEvent("cellChange", [t]); this.select(this.selectedIndex); if (e) { this.positionSliderAtSelected() } }; return i }); (function (i, n) { if (typeof define == "function" && define.amd) { define("flickity/js/lazyload", ["./flickity", "fizzy-ui-utils/utils"], function (t, e) { return n(i, t, e) }) } else if (typeof module == "object" && module.exports) { module.exports = n(i, require("./flickity"), require("fizzy-ui-utils")) } else { n(i, i.Flickity, i.fizzyUIUtils) } })(window, function t(e, i, o) { "use strict"; i.createMethods.push("_createLazyload"); var n = i.prototype; n._createLazyload = function () { this.on("select", this.lazyLoad) }; n.lazyLoad = function () { var t = this.options.lazyLoad; if (!t) { return } var e = typeof t == "number" ? t : 0; var i = this.getAdjacentCellElements(e); var n = []; i.forEach(function (t) { var e = s(t); n = n.concat(e) }); n.forEach(function (t) { new r(t, this) }, this) }; function s(t) { if (t.nodeName == "IMG") { var e = t.getAttribute("data-flickity-lazyload"); var i = t.getAttribute("data-flickity-lazyload-src"); var n = t.getAttribute("data-flickity-lazyload-srcset"); if (e || i || n) { return [t] } } var s = "img[data-flickity-lazyload], " + "img[data-flickity-lazyload-src], img[data-flickity-lazyload-srcset]"; var r = t.querySelectorAll(s); return o.makeArray(r) } function r(t, e) { this.img = t; this.flickity = e; this.load() } r.prototype.handleEvent = o.handleEvent; r.prototype.load = function () { this.img.addEventListener("load", this); this.img.addEventListener("error", this); var t = this.img.getAttribute("data-flickity-lazyload") || this.img.getAttribute("data-flickity-lazyload-src"); var e = this.img.getAttribute("data-flickity-lazyload-srcset"); this.img.src = t; if (e) { this.img.setAttribute("srcset", e) } this.img.removeAttribute("data-flickity-lazyload"); this.img.removeAttribute("data-flickity-lazyload-src"); this.img.removeAttribute("data-flickity-lazyload-srcset") }; r.prototype.onload = function (t) { this.complete(t, "flickity-lazyloaded") }; r.prototype.onerror = function (t) { this.complete(t, "flickity-lazyerror") }; r.prototype.complete = function (t, e) { this.img.removeEventListener("load", this); this.img.removeEventListener("error", this); var i = this.flickity.getParentCell(this.img); var n = i && i.element; this.flickity.cellSizeChange(n); this.img.classList.add(e); this.flickity.dispatchEvent("lazyLoad", t, n) }; i.LazyLoader = r; return i });
/*!
 * Flickity v2.3.0
 * Touch, responsive, flickable carousels
 *
 * Licensed GPLv3 for open source use
 * or Flickity Commercial License for commercial use
 *
 * https://flickity.metafizzy.co
 * Copyright 2015-2021 Metafizzy
 */
(function (t, e) { if (typeof define == "function" && define.amd) { define("flickity/js/index", ["./flickity", "./drag", "./prev-next-button", "./page-dots", "./player", "./add-remove-cell", "./lazyload"], e) } else if (typeof module == "object" && module.exports) { module.exports = e(require("./flickity"), require("./drag"), require("./prev-next-button"), require("./page-dots"), require("./player"), require("./add-remove-cell"), require("./lazyload")) } })(window, function t(e) { return e });
/*!
 * Flickity asNavFor v2.0.2
 * enable asNavFor for Flickity
 */
(function (t, e) { if (typeof define == "function" && define.amd) { define("flickity-as-nav-for/as-nav-for", ["flickity/js/index", "fizzy-ui-utils/utils"], e) } else if (typeof module == "object" && module.exports) { module.exports = e(require("flickity"), require("fizzy-ui-utils")) } else { t.Flickity = e(t.Flickity, t.fizzyUIUtils) } })(window, function t(n, s) { n.createMethods.push("_createAsNavFor"); var e = n.prototype; e._createAsNavFor = function () { this.on("activate", this.activateAsNavFor); this.on("deactivate", this.deactivateAsNavFor); this.on("destroy", this.destroyAsNavFor); var e = this.options.asNavFor; if (!e) { return } var i = this; setTimeout(function t() { i.setNavCompanion(e) }) }; e.setNavCompanion = function (t) { t = s.getQueryElement(t); var e = n.data(t); if (!e || e == this) { return } this.navCompanion = e; var i = this; this.onNavCompanionSelect = function () { i.navCompanionSelect() }; e.on("select", this.onNavCompanionSelect); this.on("staticClick", this.onNavStaticClick); this.navCompanionSelect(true) }; e.navCompanionSelect = function (t) { var e = this.navCompanion && this.navCompanion.selectedCells; if (!e) { return } var i = e[0]; var n = this.navCompanion.cells.indexOf(i); var s = n + e.length - 1; var r = Math.floor(a(n, s, this.navCompanion.cellAlign)); this.selectCell(r, false, t); this.removeNavSelectedElements(); if (r >= this.cells.length) { return } var o = this.cells.slice(n, s + 1); this.navSelectedElements = o.map(function (t) { return t.element }); this.changeNavSelectedClass("add") }; function a(t, e, i) { return (e - t) * i + t } e.changeNavSelectedClass = function (e) { this.navSelectedElements.forEach(function (t) { t.classList[e]("is-nav-selected") }) }; e.activateAsNavFor = function () { this.navCompanionSelect(true) }; e.removeNavSelectedElements = function () { if (!this.navSelectedElements) { return } this.changeNavSelectedClass("remove"); delete this.navSelectedElements }; e.onNavStaticClick = function (t, e, i, n) { if (typeof n == "number") { this.navCompanion.selectCell(n) } }; e.deactivateAsNavFor = function () { this.removeNavSelectedElements() }; e.destroyAsNavFor = function () { if (!this.navCompanion) { return } this.navCompanion.off("select", this.onNavCompanionSelect); this.off("staticClick", this.onNavStaticClick); delete this.navCompanion }; return n });
/*!
 * imagesLoaded v4.1.4
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */
(function (e, i) { "use strict"; if (typeof define == "function" && define.amd) { define("imagesloaded/imagesloaded", ["ev-emitter/ev-emitter"], function (t) { return i(e, t) }) } else if (typeof module == "object" && module.exports) { module.exports = i(e, require("ev-emitter")) } else { e.imagesLoaded = i(e, e.EvEmitter) } })(typeof window !== "undefined" ? window : this, function t(e, i) { var s = e.jQuery; var r = e.console; function o(t, e) { for (var i in e) { t[i] = e[i] } return t } var n = Array.prototype.slice; function a(t) { if (Array.isArray(t)) { return t } var e = typeof t == "object" && typeof t.length == "number"; if (e) { return n.call(t) } return [t] } function l(t, e, i) { if (!(this instanceof l)) { return new l(t, e, i) } var n = t; if (typeof t == "string") { n = document.querySelectorAll(t) } if (!n) { r.error("Bad element for imagesLoaded " + (n || t)); return } this.elements = a(n); this.options = o({}, this.options); if (typeof e == "function") { i = e } else { o(this.options, e) } if (i) { this.on("always", i) } this.getImages(); if (s) { this.jqDeferred = new s.Deferred } setTimeout(this.check.bind(this)) } l.prototype = Object.create(i.prototype); l.prototype.options = {}; l.prototype.getImages = function () { this.images = []; this.elements.forEach(this.addElementImages, this) }; l.prototype.addElementImages = function (t) { if (t.nodeName == "IMG") { this.addImage(t) } if (this.options.background === true) { this.addElementBackgroundImages(t) } var e = t.nodeType; if (!e || !h[e]) { return } var i = t.querySelectorAll("img"); for (var n = 0; n < i.length; n++) { var s = i[n]; this.addImage(s) } if (typeof this.options.background == "string") { var r = t.querySelectorAll(this.options.background); for (n = 0; n < r.length; n++) { var o = r[n]; this.addElementBackgroundImages(o) } } }; var h = { 1: true, 9: true, 11: true }; l.prototype.addElementBackgroundImages = function (t) { var e = getComputedStyle(t); if (!e) { return } var i = /url\((['"])?(.*?)\1\)/gi; var n = i.exec(e.backgroundImage); while (n !== null) { var s = n && n[2]; if (s) { this.addBackground(s, t) } n = i.exec(e.backgroundImage) } }; l.prototype.addImage = function (t) { var e = new c(t); this.images.push(e) }; l.prototype.addBackground = function (t, e) { var i = new u(t, e); this.images.push(i) }; l.prototype.check = function () { var n = this; this.progressedCount = 0; this.hasAnyBroken = false; if (!this.images.length) { this.complete(); return } function e(t, e, i) { setTimeout(function () { n.progress(t, e, i) }) } this.images.forEach(function (t) { t.once("progress", e); t.check() }) }; l.prototype.progress = function (t, e, i) { this.progressedCount++; this.hasAnyBroken = this.hasAnyBroken || !t.isLoaded; this.emitEvent("progress", [this, t, e]); if (this.jqDeferred && this.jqDeferred.notify) { this.jqDeferred.notify(this, t) } if (this.progressedCount == this.images.length) { this.complete() } if (this.options.debug && r) { r.log("progress: " + i, t, e) } }; l.prototype.complete = function () { var t = this.hasAnyBroken ? "fail" : "done"; this.isComplete = true; this.emitEvent(t, [this]); this.emitEvent("always", [this]); if (this.jqDeferred) { var e = this.hasAnyBroken ? "reject" : "resolve"; this.jqDeferred[e](this) } }; function c(t) { this.img = t } c.prototype = Object.create(i.prototype); c.prototype.check = function () { var t = this.getIsImageComplete(); if (t) { this.confirm(this.img.naturalWidth !== 0, "naturalWidth"); return } this.proxyImage = new Image; this.proxyImage.addEventListener("load", this); this.proxyImage.addEventListener("error", this); this.img.addEventListener("load", this); this.img.addEventListener("error", this); this.proxyImage.src = this.img.src }; c.prototype.getIsImageComplete = function () { return this.img.complete && this.img.naturalWidth }; c.prototype.confirm = function (t, e) { this.isLoaded = t; this.emitEvent("progress", [this, this.img, e]) }; c.prototype.handleEvent = function (t) { var e = "on" + t.type; if (this[e]) { this[e](t) } }; c.prototype.onload = function () { this.confirm(true, "onload"); this.unbindEvents() }; c.prototype.onerror = function () { this.confirm(false, "onerror"); this.unbindEvents() }; c.prototype.unbindEvents = function () { this.proxyImage.removeEventListener("load", this); this.proxyImage.removeEventListener("error", this); this.img.removeEventListener("load", this); this.img.removeEventListener("error", this) }; function u(t, e) { this.url = t; this.element = e; this.img = new Image } u.prototype = Object.create(c.prototype); u.prototype.check = function () { this.img.addEventListener("load", this); this.img.addEventListener("error", this); this.img.src = this.url; var t = this.getIsImageComplete(); if (t) { this.confirm(this.img.naturalWidth !== 0, "naturalWidth"); this.unbindEvents() } }; u.prototype.unbindEvents = function () { this.img.removeEventListener("load", this); this.img.removeEventListener("error", this) }; u.prototype.confirm = function (t, e) { this.isLoaded = t; this.emitEvent("progress", [this, this.element, e]) }; l.makeJQueryPlugin = function (t) { t = t || e.jQuery; if (!t) { return } s = t; s.fn.imagesLoaded = function (t, e) { var i = new l(this, t, e); return i.jqDeferred.promise(s(this)) } }; l.makeJQueryPlugin(); return l });
/*!
 * Flickity imagesLoaded v2.0.0
 * enables imagesLoaded option for Flickity
 */
(function (i, n) { if (typeof define == "function" && define.amd) { define(["flickity/js/index", "imagesloaded/imagesloaded"], function (t, e) { return n(i, t, e) }) } else if (typeof module == "object" && module.exports) { module.exports = n(i, require("flickity"), require("imagesloaded")) } else { i.Flickity = n(i, i.Flickity, i.imagesLoaded) } })(window, function t(e, i, s) { "use strict"; i.createMethods.push("_createImagesLoaded"); var n = i.prototype; n._createImagesLoaded = function () { this.on("activate", this.imagesLoaded) }; n.imagesLoaded = function () { if (!this.options.imagesLoaded) { return } var n = this; function t(t, e) { var i = n.getParentCell(e.img); n.cellSizeChange(i && i.element); if (!n.options.freeScroll) { n.positionSliderAtSelected() } } s(this.slider).on("progress", t) }; return i });